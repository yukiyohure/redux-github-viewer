{"version":3,"sources":["variables.js","GlobalStyle.js","components/molecules/Menu.js","components/organisms/DropdownMenu.js","components/organisms/Header.js","actions/index.js","components/atoms/TextInput.js","components/atoms/Button.js","components/atoms/TextArea.js","components/atoms/ErrorMessage.js","components/templates/NewIssue.js","components/organisms/SearchBar.js","components/templates/EditIssue.js","components/organisms/IssueContents.js","components/templates/Issue.js","containers/Issue.js","pages/Issue.js","pages/PullRequest.js","components/organisms/TabHeader.js","components/templates/PullRequest.js","components/templates/IndexTemplate.js","pages/Index.js","pages/Profile.js","containers/Profile.js","components/organisms/ModalWrapper.js","containers/Modal.js","App.js","reportWebVitals.js","reducers/issue.js","reducers/profile.js","reducers/ui/modal.js","reducers/index.js","index.js"],"names":["colors","defaultText","weak","border","primary","hoverPrimary","primaryShadow","hoverPrimaryShadow","danger","dangerShadow","dangerBackground","hoverDanger","hoverDangerShadow","backgroundBlack","white","black","linkText","GlobalStyle","createGlobalStyle","Wrapper","styled","div","MenuLinks","key","label","to","MenuItem","li","Menu","onClick","map","Container","MenuIcon","FontAwesomeIcon","DropdownMenu","useState","isShown","setShown","handleMenuClick","icon","faBars","HeaderContainer","Title","h1","HeaderLinkList","ul","links","Header","link","ADD_ISSUE","EDIT_ISSUE","DELETE_ISSUE","SHOW_MODAL","HIDE_MODAL","hideModal","type","Text","input","TextInput","placeholder","value","onChange","e","target","BaseButton","button","background","shadow","textColor","hoverBackground","hoverShadow","Button","TextAreaInput","textarea","TextArea","RedField","p","ErrorMessage","message","InputSection","MessageContainer","section","FieldLabel","Field","CloseButton","a","Footer","validateRequired","errorMessage","NewIssue","addIssue","issueTitle","setIssueTitle","issueDescription","setIssueDescription","title","description","errors","setErrors","titleError","descriptionError","date","Date","status","author","createdAt","updatedAt","SearchForm","ActionButtons","SearchBar","deleteIssue","searchWord","showModal","checkedIssueIdList","setIsCheckedAllCheckbox","component","length","forEach","id","EditIssue","issue","editIssue","issueState","setIssueState","payload","IssueTable","table","TableRow","tr","IssueContents","issueData","setCheckedIssueIdList","isCheckedAllCheckbox","allIdList","item","checked","prevState","newState","readOnly","row","stopPropagation","includes","filter","onClickCheckbox","Issue","setSearchWord","filterdIssueData","connect","state","data","dispatch","IssuePage","PullRequest","TabList","Tab","isActive","TabHeader","selectedTab","tabs","tabContents","IndexTemplate","tabContent","Index","changeTab","ProfileContainer","ProfilePicture","ProfileInformation","Label","ProfileItem","ProfileWrapper","Profile","user","src","profileUrl","alt","userName","email","profile","Modal","setAppElement","ModalWrapper","isOpen","onRequestClose","modal","ContentWrapper","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mockData","initialState","index","issueReducer","action","newIndex","newData","findIndex","profileReducer","modalReducer","rootReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31057d23.chunk.js","sourcesContent":["export const colors = {\n  defaultText: '#333',\n  weak: '#586069',\n  border: '#e1e4e8',\n  primary: '#42c360',\n  hoverPrimary: '#28a745',\n  primaryShadow: '#55A846',\n  hoverPrimaryShadow: '#208437',\n  danger: '#d73a49',\n  dangerShadow: '#AF2D2A',\n  dangerBackground: '#F1BABF',\n  hoverDanger: '#af1c2a',\n  hoverDangerShadow: '#671019',\n  backgroundBlack: '#333',\n  white: '#fff',\n  black: '#000',\n  linkText: '#0366d6',\n};","import { createGlobalStyle } from \"styled-components\";\nimport { colors } from \"./variables\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    font-family: 'Lato', 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n    line-height: 1.5;\n    font-size: 14px;\n    padding: 0;\n    margin: 0;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n  }\n  *, *:before, *:after {\n    box-sizing: border-box;\n  }\n  h1 {\n    font-size: 2rem;\n    padding: 0;\n    margin: 0;\n  }\n  ul, p {\n    padding: 0;\n    margin: 0;\n  }\n  li {\n    list-style-type: none;\n  }\n  a {\n    text-decoration: none;\n    color: ${colors.linkText};\n  }\n\n  ${\n    \"\" /* React-modalのcontent部分のスタイリングはReactModal__Contentクラスを指定する */\n  }\n  .ReactModal__Content {\n    margin: auto;\n    width: 60%;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../variables\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Wrapper = styled.div`\n  position: absolute;\n  right: 20px;\n  width: 200px;\n  padding: 0.5rem;\n  color: ${colors.defaultText};\n  border-radius: 2px;\n  margin-top: 1rem;\n  background: ${colors.white};\n  box-shadow: rgba(51, 51, 51, 0.15) 1px 1px 4px 1px;\n`;\n\nconst MenuLinks = [\n  { key: \"top\", label: \"Top\", to: \"/\" },\n  { key: \"profile\", label: \"Your Profile\", to: \"/profile\" },\n  { key: \"issue\", label: \"Issue\", to: \"/issue\" },\n  { key: \"pullrequest\", label: \"Pull Request\", to: \"/pull-request\" },\n];\n\nconst MenuItem = styled.li`\n  a {\n    color: ${colors.defaultText};\n    font-size: 1rem;\n    padding: 0.5rem;\n    display: block;\n  }\n`;\n\nconst Menu = ({ onClick }) => {\n  return (\n    <Wrapper>\n      <ul>\n        {MenuLinks.map(({ key, label, to }) => {\n          return (\n            <MenuItem key={key}>\n              <Link to={to} onClick={onClick}>\n                {label}\n              </Link>\n            </MenuItem>\n          );\n        })}\n      </ul>\n    </Wrapper>\n  );\n};\n\nMenu.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Menu;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // font-awesomeを使用するためのコンポーネント\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\"; // 実際に使用するアイコンを指定するコンポーネント\nimport { colors } from \"../../variables\";\nimport Menu from \"../molecules/Menu\";\n\nconst Container = styled.div`\n  padding: 0.5rem;\n  font-size: 1.2rem;\n`;\n\n// importしたFontAwesomeIconを継承してスタイリングを行うことができる\nconst MenuIcon = styled(FontAwesomeIcon)`\n  cursor: pointer;\n  color: ${colors.white};\n`;\n\nconst DropdownMenu = () => {\n  const [isShown, setShown] = useState(false);\n\n  const handleMenuClick = () => {\n    setShown(!isShown);\n  };\n\n  return (\n    <Container>\n      <MenuIcon onClick={handleMenuClick} icon={faBars} />\n      {isShown && <Menu onClick={handleMenuClick} />}\n    </Container>\n  );\n};\n\nexport default DropdownMenu;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { colors } from \"../../variables\";\nimport DropdownMenu from \"./DropdownMenu\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  align-items: cener;\n  justify-content: space-between;\n  background: ${colors.backgroundBlack};\n  padding: 1rem;\n`;\n\nconst Title = styled.h1`\n  white-space: nowrap;\n  font-size: 2rem;\n  a {\n    color: ${colors.white};\n  }\n`;\n\nconst HeaderLinkList = styled.ul`\n  display: flex;\n  align-items: center;\n  padding: 0 2rem;\n  width: 100%;\n  li {\n    margin-right: 1rem;\n    font-size: 1.1rem;\n  }\n  li > a {\n    color: ${colors.white};\n    font-size: 1.1rem;\n  }\n`;\n\nconst links = [\n  { to: \"/issue\", key: \"issue\", linkText: \"Issue\" },\n  { to: \"/pull-request\", key: \"pullRequest\", linkText: \"Pull Request\" },\n];\n\nconst Header = () => {\n  return (\n    <HeaderContainer>\n      <div>\n        <Title>\n          <Link to=\"/\">Github Viewer</Link>\n        </Title>\n      </div>\n      <HeaderLinkList>\n        {links.map((link) => {\n          return (\n            <li key={link.key}>\n              {\" \"}\n              {/* Reactが効率よくリストの差分抽出できるように一意のkeyを渡してあげる */}\n              <Link to={link.to}>{link.linkText}</Link>\n            </li>\n          );\n        })}\n      </HeaderLinkList>\n      <DropdownMenu />\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","// action type を定数で定義するメリット\n// https://redux.js.org/recipes/reducing-boilerplate#actions\n\nexport const ADD_ISSUE = \"ADD_ISSUE\";\nexport const EDIT_ISSUE = \"EDIT_ISSUE\";\nexport const DELETE_ISSUE = \"DELETE_ISSUE\";\nexport const SHOW_MODAL = \"SHOW_MODAL\";\nexport const HIDE_MODAL = \"HIDE_MODAL\";\n\nexport const addIssue = (newData) => {\n  return {\n    type: ADD_ISSUE,\n    payload: newData,\n  };\n};\n\nexport const editIssue = (newData) => {\n  return {\n    type: EDIT_ISSUE,\n    payload: newData,\n  };\n};\n\nexport const deleteIssue = (id) => {\n  return {\n    type: DELETE_ISSUE,\n    payload: {id},\n  };\n};\n\nexport const showModal = ({ component }) => {\n  return {\n    type: SHOW_MODAL,\n    payload: component,\n  };\n};\n\nexport const hideModal = () => {\n  return {\n    type: HIDE_MODAL,\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { colors } from \"../../variables\";\n\n// テキスト入力欄のスタイリング\nconst Text = styled.input`\n  outline: none;\n  border: none;\n  background: none;\n  padding: 0.5rem;\n  font-size: 1rem;\n  width: 100%;\n`;\n\nconst Wrapper = styled.div`\n  border: 1px solid ${colors.border};\n  border-radius: 6px;\n  width: 100%;\n`;\n\nconst TextInput = ({ placeholder, value, onChange }) => {\n  return (\n    <Wrapper>\n      <Text\n        type=\"text\"\n        placeholder={placeholder}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n\nTextInput.propTypes = {\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../variables\";\nimport PropTypes from \"prop-types\";\n\nconst BaseButton = styled.button`\n  cursor: pointer;\n  border: none;\n  padding: 0.5rem 1rem;\n  margin: 4px;\n  text-align: center;\n  font-size: 1rem;\n  border-radius: 6px;\n  outline: none;\n  background: ${({ background }) => colors[background]};\n  box-shadow: 0 1px ${({ shadow }) => colors[shadow]};\n  color: ${({ textColor }) => colors[textColor]};\n  width: 100%;\n  min-width: 100px;\n  font-weight: bold;\n  &:hover {\n    background: ${({ hoverBackground }) => colors[hoverBackground]};\n    box-shadow: 0 1px ${({ hoverShadow }) => colors[hoverShadow]};\n  }\n  &:active {\n    box-shadow: none;\n    transform: translateY(1px);\n  }\n`;\n\nconst Button = ({\n  textColor,\n  background,\n  hoverBackground,\n  shadow,\n  hoverShadow,\n  label,\n  onClick,\n}) => {\n  return (\n    <BaseButton\n      textColor={textColor}\n      background={background}\n      hoverBackground={hoverBackground}\n      shadow={shadow}\n      hoverShadow={hoverShadow}\n      onClick={onClick} // 即時巻数を渡すと毎回余計にレンダーしてしまうので関数をそのまま渡してあげる。\n    >\n      {label}\n    </BaseButton>\n  );\n};\n\nButton.propTypes = {\n  textColor: PropTypes.string,\n  background: PropTypes.string,\n  hoverBackground: PropTypes.string,\n  shadow: PropTypes.string,\n  hoverShadow: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { colors } from \"../../variables\";\n\n// テキストエリア入力欄のスタイリング\nconst TextAreaInput = styled.textarea`\n  outline: none;\n  border: none;\n  background: none;\n  padding: 0.5rem;\n  font-size: 1rem;\n  width: 100%;\n  min-height: 150px;\n`;\n\nconst Wrapper = styled.div`\n  border: 1px solid ${colors.border};\n  border-radius: 6px;\n  width: 100%;\n`;\n\nconst TextArea = ({ placeholder, value, onChange }) => {\n  return (\n    <Wrapper>\n      <TextAreaInput\n        placeholder={placeholder}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n\nTextArea.propTypes = {\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default TextArea;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../variables\";\nimport PropTypes from \"prop-types\";\n\nconst RedField = styled.p`\n  color: ${colors.danger};\n  padding: 0.5rem;\n  border-radius: 6px;\n  background: ${colors.dangerBackground};\n  margin: 0.5rem 0;\n`;\n\nconst ErrorMessage = ({ message }) => {\n  return <RedField>{message}</RedField>;\n};\n\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ErrorMessage;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TextInput from \"../atoms/TextInput\";\nimport TextArea from \"../atoms/TextArea\";\nimport Button from \"../atoms/Button\";\nimport PropTypes from \"prop-types\";\nimport ErrorMessage from \"../atoms/ErrorMessage\";\n\nconst Wrapper = styled.div`\n  max-width: 598px;\n  margin: auto;\n`;\n\nconst InputSection = styled.div`\n  padding: 2rem 0 1rem;\n`;\n\nconst MessageContainer = styled.section`\n  padding: 1rem;\n  min-height: 119px; /* エラー文が出てきてもボタンがしたに追いやられないよう、事前にスペースを開けておこう。*/\n`;\n\nconst FieldLabel = styled.label`\n  display: block;\n  padding: 0.5rem 0;\n`;\n\nconst Field = styled.div`\n  padding: 1rem;\n`;\n\nconst CloseButton = styled.a`\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  margin: 4px;\n  min-width: 100px;\n  text-align: center;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 0.5rem;\n  button {\n    width: auto;\n  }\n`;\n\n// 入力チェックバリデーション\nconst validateRequired = (value, errorMessage) => {\n  return value === \"\" ? errorMessage : \"\";\n};\n\nconst NewIssue = ({ hideModal, addIssue }) => {\n  const [issueTitle, setIssueTitle] = useState(\"\");\n  const [issueDescription, setIssueDescription] = useState(\"\");\n  // 表示するためのエラーメッセージオブジェクト。keyにあるだけの文が潜在的なエラー分の全て。\n  const [errors, setErrors] = useState({ title: \"\", description: \"\" });\n\n  const onSubmit = () => {\n    // バリデーションは種類ごとに関数で切り分けて、拡張性を重視してみる(1種類しかないけど)\n    const titleError = validateRequired(\n      issueTitle,\n      \"タイトルを入力してください\"\n    );\n    const descriptionError = validateRequired(\n      issueDescription,\n      \"説明を入力してください\"\n    );\n\n    // エラーがあった場合は早期リターンでdispatchさせない\n    if (titleError || descriptionError) {\n      setErrors({ title: titleError, description: descriptionError });\n      return;\n    }\n\n    const date = new Date();\n    const payload = {\n      title: issueTitle,\n      description: issueDescription,\n      status: \"Open\",\n      author: \"\",\n      createdAt: date,\n      updatedAt: date,\n    };\n    addIssue(payload);\n    hideModal(); // issueの追加処理が終わったらモーダルを閉じる\n  };\n\n  return (\n    <Wrapper>\n      <h2>Issueを追加</h2>\n      <InputSection>\n        <Field>\n          <FieldLabel>タイトル</FieldLabel>\n          <TextInput\n            placeholder=\"タイトルを入力してください\"\n            onChange={setIssueTitle}\n          />\n        </Field>\n        <Field>\n          <FieldLabel>説明</FieldLabel>\n          <TextArea\n            placeholder=\"説明を入力してください\"\n            onChange={setIssueDescription}\n          />\n        </Field>\n      </InputSection>\n      <MessageContainer>\n        {errors.title && <ErrorMessage message={errors.title}></ErrorMessage>}\n        {errors.description && (\n          <ErrorMessage message={errors.description}></ErrorMessage>\n        )}\n      </MessageContainer>\n      <Footer>\n        <Button\n          hoverBackground=\"hoverPrimary\"\n          background=\"primary\"\n          textColor=\"white\"\n          shadow=\"primaryShadow\"\n          hoverShadow=\"hoverPrimaryShadow\"\n          label=\"作成\"\n          onClick={onSubmit}\n        />\n        <CloseButton onClick={hideModal}>閉じる</CloseButton>\n      </Footer>\n    </Wrapper>\n  );\n};\n\nNewIssue.propTypes = {\n  hideModal: PropTypes.func,\n  addIssue: PropTypes.func,\n};\n\nexport default NewIssue;\n","import React from \"react\";\nimport TextInput from \"../atoms/TextInput\";\nimport styled from \"styled-components\";\nimport Button from \"../atoms/Button\";\nimport PropTypes from \"prop-types\";\nimport NewIssue from \"../templates/NewIssue\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst SearchForm = styled.div`\n  padding: 0.5rem 1rem;\n  width: 100%;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n`;\n\nconst SearchBar = ({\n  addIssue,\n  deleteIssue,\n  searchWord,\n  onChange,\n  showModal,\n  hideModal,\n  checkedIssueIdList,\n  setIsCheckedAllCheckbox,\n}) => {\n  const onClickDelete = () => {\n    if (checkedIssueIdList.length) {\n      checkedIssueIdList.forEach((id) => {\n        deleteIssue(id);\n      });\n      // issueを削除した後は自動的に全件チェックボックスのチェックを外す\n      setIsCheckedAllCheckbox(false);\n    }\n  };\n  return (\n    <Wrapper>\n      <h2>Issue</h2>\n      <SearchForm>\n        <TextInput\n          placeholder=\"issue名で検索\"\n          value={searchWord}\n          onChange={onChange}\n        />\n      </SearchForm>\n      <ActionButtons>\n        <Button\n          onClick={() =>\n            showModal({\n              component: (\n                <NewIssue addIssue={addIssue} hideModal={() => hideModal()} />\n              ),\n            })\n          }\n          hoverBackground=\"hoverPrimary\"\n          background=\"primary\"\n          textColor=\"white\"\n          shadow=\"primaryShadow\"\n          hoverShadow=\"hoverPrimaryShadow\"\n          label=\"New\"\n        />\n        <Button\n          onClick={onClickDelete}\n          hoverBackground=\"hoverDanger\"\n          background=\"danger\"\n          textColor=\"white\"\n          shadow=\"dangerShadow\"\n          hoverShadow=\"hoverDangerShadow\"\n          label=\"Delete\"\n        />\n      </ActionButtons>\n    </Wrapper>\n  );\n};\n\nSearchBar.propTypes = {\n  searchWord: PropTypes.string,\n  onChange: PropTypes.func,\n  showModal: PropTypes.func,\n  hideModal: PropTypes.func,\n  addIssue: PropTypes.func,\n  deleteIssue: PropTypes.func,\n  checkedIssueIdList: PropTypes.array,\n  setIsCheckedAllCheckbox: PropTypes.func,\n};\n\nexport default SearchBar;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Button from \"../atoms/Button\";\nimport TextInput from \"../atoms/TextInput\";\nimport TextArea from \"../atoms/TextArea\";\nimport ErrorMessage from '../atoms/ErrorMessage';\n\nconst Wrapper = styled.div`\n  max-width: 598px;\n  margin: auto;\n`;\n\nconst InputSection = styled.div`\n  padding: 2rem 0 1rem;\n`;\n\nconst MessageContainer = styled.section`\n  padding: 1rem;\n  min-height: 119px; /* エラー文が出てきてもボタンがしたに追いやられないよう、事前にスペースを開けておく。*/\n`;\n\nconst FieldLabel = styled.label`\n  display: block;\n  padding: 0.5rem 0;\n`;\n\nconst Field = styled.div`\n  padding: 1rem;\n`;\n\nconst CloseButton = styled.a`\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  margin: 4px;\n  min-width: 100px;\n  text-align: center;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 0.5rem;\n  button {\n    width: auto;\n  }\n`;\n\nconst validateRequired = (value, errorMessage) => {\n  return value === '' ? errorMessage : '';\n}\n\nconst EditIssue = ({ issue, hideModal, editIssue }) => {\n  const [issueState, setIssueState] = useState(issue.status);\n  const [issueTitle, setIssueTitle] = useState(issue.title);\n  const [issueDescription, setIssueDescription] = useState(issue.description);\n  const [errors, setErrors] = useState({ title: \"\", description: \"\" });\n\n  const onChangeStatus = (e) => {\n    setIssueState(e.target.value);\n  };\n\n  const onSubmit = () => {\n    const titleError = validateRequired(issueTitle, 'タイトルを入力してください');\n    const descriptionError = validateRequired(issueDescription, '説明を入力してください');\n\n    if (titleError || descriptionError) {\n      setErrors({ title: titleError, description: descriptionError});\n      return;\n    }\n\n    const date = new Date();\n    const payload = {\n      ...issue,\n      title: issueTitle,\n      status: issueState,\n      description: issueDescription,\n      updatedAt: date,\n    };\n    editIssue(payload);\n    hideModal();\n  };\n\n  return (\n    <Wrapper>\n      <h2>Issueを追加</h2>\n      <InputSection>\n        <Field>\n          <FieldLabel>タイトル</FieldLabel>\n          <TextInput\n            placeholder=\"タイトルを入力してください\"\n            value={issueTitle}\n            onChange={setIssueTitle}\n          />\n        </Field>\n        <Field>\n          <FieldLabel>説明</FieldLabel>\n          <TextArea\n            placeholder=\"説明を入力してください\"\n            value={issueDescription}\n            onChange={setIssueDescription}\n          />\n        </Field>\n        <Field>\n          <select value={issueState} onChange={onChangeStatus}>\n            <option value=\"open\">Open</option>\n            <option value=\"close\">Close</option>\n          </select>\n        </Field>\n      </InputSection>\n      <MessageContainer>\n        {errors.title && <ErrorMessage message={errors.title}></ErrorMessage>}\n        {errors.description && (\n          <ErrorMessage message={errors.description}></ErrorMessage>\n        )}\n      </MessageContainer>\n      <Footer>\n        <Button\n          hoverBackground=\"hoverPrimary\"\n          background=\"primary\"\n          textColor=\"white\"\n          shadow=\"primaryShadow\"\n          hoverShadow=\"hoverPrimaryShadow\"\n          label=\"作成\"\n          onClick={onSubmit}\n        />\n        <CloseButton onClick={hideModal}>閉じる</CloseButton>\n      </Footer>\n    </Wrapper>\n  );\n};\n\nEditIssue.propTypes = {\n  issue: PropTypes.object,\n  hideModal: PropTypes.func,\n  editIssue: PropTypes.func,\n};\n\nexport default EditIssue;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../variables\";\nimport PropTypes from \"prop-types\";\nimport EditIssue from \"../templates/EditIssue\";\n\nconst Wrapper = styled.div`\n  overflow: scroll;\n`;\n\nconst IssueTable = styled.table`\n  border: 1px solid ${colors.border};\n  border-radius: 6px;\n  width: 100%;\n`;\n\nconst TableRow = styled.tr`\n  cursor: pointer;\n  &:hover {\n    background: rgba(198, 218, 230, 0.25);\n  }\n\n  /* 最後の行のtdにかかっているborder-bottomを削除しないと、table自体のborderとの間に変な隙間があるように見える */\n  &:last-child > td {\n    border-bottom: none;\n  }\n\n  th,\n  td {\n    padding: 0.5rem;\n    text-align: left;\n    min-width: 10rem;\n    border-bottom: 1px solid ${colors.border};\n  }\n  th:first-child,\n  td:first-child {\n    min-width: auto;\n  }\n`;\n\nconst IssueContents = ({\n  issueData,\n  showModal,\n  hideModal,\n  editIssue,\n  checkedIssueIdList,\n  setCheckedIssueIdList,\n  isCheckedAllCheckbox,\n  setIsCheckedAllCheckbox,\n}) => {\n  const allIdList = issueData.map((item) => item.id);\n\n  const onClickAllCheckbox = () => {\n    setIsCheckedAllCheckbox((prevState) => {\n      const newState = !prevState;\n      // 変更したstate(全件checkboxのstate)を参考に別の処理を行う必要があったため、useStateのsetterにcallbackを渡し,\n      // その中で処理を行うことで変更されたstateを使って同期的に処理を実行可能\n      newState ? setCheckedIssueIdList(allIdList) : setCheckedIssueIdList([]);\n      return newState;\n    });\n  };\n\n  const onClickCheckbox = (e, id) => {\n    e.stopPropagation();\n    if (checkedIssueIdList.includes(id)) {\n      // checkされていた場合\n      setCheckedIssueIdList(checkedIssueIdList.filter((item) => item != id));\n    } else {\n      // checkされていなかった場合\n      setCheckedIssueIdList([...checkedIssueIdList, id]);\n    }\n  };\n  return (\n    <Wrapper>\n      <IssueTable>\n        <thead>\n          <TableRow>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={isCheckedAllCheckbox}\n                onClick={onClickAllCheckbox}\n                readOnly\n              />\n            </th>\n            <th></th>\n            <th>ステータス</th>\n            <th>作成者</th>\n            <th>作成日付</th>\n            <th>更新日付</th>\n          </TableRow>\n        </thead>\n        <tbody>\n          {issueData.length ? (\n            issueData.map((row) => {\n              return (\n                <TableRow\n                  key={row.id}\n                  onClick={() =>\n                    showModal({\n                      component: (\n                        <EditIssue\n                          issue={row}\n                          hideModal={hideModal}\n                          editIssue={editIssue}\n                        />\n                      ),\n                    })\n                  }\n                >\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      onClick={(e) => onClickCheckbox(e, row.id)}\n                      checked={checkedIssueIdList.includes(row.id)}\n                      readOnly\n                    />\n                  </td>\n                  <td>{row.title}</td>\n                  <td>{row.status}</td>\n                  <td>{row.author}</td>\n                  <td>01-01-2021</td>\n                  <td>01-01-2021</td>\n                </TableRow>\n              );\n            })\n          ) : (\n            <TableRow>\n              <td>データがありません</td>\n            </TableRow>\n          )}\n        </tbody>\n      </IssueTable>\n    </Wrapper>\n  );\n};\n\nIssueContents.propTypes = {\n  issueData: PropTypes.array,\n  showModal: PropTypes.func,\n  hideModal: PropTypes.func,\n  editIssue: PropTypes.func,\n  checkedIssueIdList: PropTypes.array,\n  setCheckedIssueIdList: PropTypes.func,\n  isCheckedAllCheckbox: PropTypes.bool,\n  setIsCheckedAllCheckbox: PropTypes.func,\n};\n\nexport default IssueContents;\n","import React, { useState } from \"react\";\nimport SearchBar from \"../organisms/SearchBar\";\nimport styled from \"styled-components\";\nimport IssueContents from \"../organisms/IssueContents\";\nimport PropTypes from \"prop-types\";\n\nconst Wrapper = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n`;\n\nconst Issue = ({\n  issueData,\n  addIssue,\n  editIssue,\n  deleteIssue,\n  showModal,\n  hideModal,\n}) => {\n  // searchBarとIssueContentsのコンポーネントで扱うstateなので親であるIssueで管理してあげる\n  const [searchWord, setSearchWord] = useState(\"\");\n  // このcheckBoxの状態も、searchBarのdeleteボタンとIssueContentのcheckBoxの2つの子コンポーネントで使用するのでここで管理\n  const [checkedIssueIdList, setCheckedIssueIdList] = useState([]);\n  const [isCheckedAllCheckbox, setIsCheckedAllCheckbox] = useState(false);\n\n  const filterdIssueData = issueData.filter((item) => {\n    return item.title.includes(searchWord);\n  });\n\n  return (\n    <Wrapper>\n      <SearchBar\n        showModal={showModal}\n        addIssue={addIssue}\n        deleteIssue={deleteIssue}\n        searchWord={searchWord}\n        onChange={setSearchWord}\n        hideModal={hideModal}\n        checkedIssueIdList={checkedIssueIdList}\n        setIsCheckedAllCheckbox={setIsCheckedAllCheckbox}\n      />\n      <IssueContents\n        issueData={filterdIssueData}\n        showModal={showModal}\n        hideModal={hideModal}\n        editIssue={editIssue}\n        checkedIssueIdList={checkedIssueIdList}\n        setCheckedIssueIdList={setCheckedIssueIdList}\n        isCheckedAllCheckbox={isCheckedAllCheckbox}\n        setIsCheckedAllCheckbox={setIsCheckedAllCheckbox}\n      />\n    </Wrapper>\n  );\n};\n\nIssue.propTypes = {\n  issueData: PropTypes.array,\n  addIssue: PropTypes.func,\n  editIssue: PropTypes.func,\n  deleteIssue: PropTypes.func,\n  showModal: PropTypes.func,\n  hideModal: PropTypes.func,\n};\n\nexport default Issue;\n","import {\n  addIssue,\n  editIssue,\n  deleteIssue,\n  hideModal,\n  showModal,\n} from \"../actions\";\nimport { connect } from \"react-redux\";\nimport Issue from \"../components/templates/Issue\";\n\nconst mapStateToProps = (state) => {\n  // Contentsコンポーネント内で使用するstateを限定する役目\n  return {\n    // stateオブジェクトから指定できるのは、src/reducers/index.js でrootReducerにまとめたときのオブジェクトのkey名\n    // key名がコンポーネントで受け取るpropsの名前になる\n    issueData: state.issue.data,\n  };\n};\n\n// Contentsコンポーネントからdispatchするときに、わざわざ `dispatch(actionCreator(追加したい要素))`しなくても、\n// この場合だと `addContents(追加したい要素)` でstoreにdispatchできるようになる\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addIssue: (payload) => {\n      dispatch(addIssue(payload));\n    },\n    editIssue: (payload) => {\n      dispatch(editIssue(payload));\n    },\n    deleteIssue: (payload) => {\n      dispatch(deleteIssue(payload));\n    },\n    showModal: (component) => {\n      dispatch(showModal(component));\n    },\n    hideModal: () => {\n      dispatch(hideModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Issue);\n","import React from \"react\";\nimport Issue from \"../containers/Issue\";\n\nconst IssuePage = () => {\n  return <Issue />;\n};\n\nexport default IssuePage;\n","import React from \"react\";\n\nconst PullRequest = () => {\n  return <h3>PullRequest</h3>;\n};\n\nexport default PullRequest;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../variables\";\nimport PropTypes from \"prop-types\";\n\nconst TabList = styled.ul`\n  display: flex;\n`;\n\nconst Tab = styled.li`\n  width: 100%;\n  text-align: center;\n  padding: 1rem;\n  cursor: pointer;\n  font-size: 1.2rem;\n  border-radius: 6px 6px 0 0;\n  border-top: ${({ isActive }) =>\n    isActive ? `1px solid ${colors.border}` : \"\"};\n  border-bottom: ${({ isActive }) =>\n    isActive ? \"\" : `1px solid ${colors.border}`};\n  border-left: ${({ isActive }) =>\n    isActive ? `1px solid ${colors.border}` : \"\"};\n  border-right: ${({ isActive }) =>\n    isActive ? `1px solid ${colors.border}` : \"\"};\n`;\n\nconst TabHeader = ({ selectedTab, tabs, onClick }) => {\n  return (\n    <TabList>\n      {tabs.map(({ key, label }) => {\n        const isActive = key === selectedTab;\n        return (\n          <Tab isActive={isActive} key={key} onClick={() => onClick(key)}>\n            {label}\n          </Tab>\n        );\n      })}\n    </TabList>\n  );\n};\n\nTabHeader.propTypes = {\n  selectedTab: PropTypes.string,\n  tabs: PropTypes.array,\n  onClick: PropTypes.func,\n};\n\nexport default TabHeader;\n","import React from \"react\";\n\nconst PullRequest = () => {\n  return <h3>Pull Request</h3>;\n};\n\nexport default PullRequest;\n","import React from \"react\";\nimport TabHeader from \"../organisms/TabHeader\";\nimport PropTypes from \"prop-types\";\nimport Issue from \"../../containers/Issue\";\nimport PullRequest from \"./PullRequest\";\n\n// 実際に表示するcomponentの配列\nconst tabContents = [\n  { key: \"issue\", component: <Issue /> },\n  { key: \"pullRequest\", component: <PullRequest /> },\n];\n\nconst IndexTemplate = ({ selectedTab, tabs, onClick }) => {\n  return (\n    <>\n      <TabHeader tabs={tabs} selectedTab={selectedTab} onClick={onClick} />\n      {tabContents.map((tabContent) => {\n        return tabContent.key === selectedTab ? tabContent.component : <></>;\n      })}\n    </>\n  );\n};\n\nIndexTemplate.propTypes = {\n  selectedTab: PropTypes.string,\n  tabs: PropTypes.array,\n  onClick: PropTypes.func,\n};\n\nexport default IndexTemplate;\n","import React, { useState } from \"react\";\nimport IndexTemplate from \"../components/templates/IndexTemplate\";\n\nconst Index = () => {\n  // タブのタイトルを表示するための配列\n  const tabs = [\n    { key: \"issue\", label: \"Issue\" },\n    { key: \"pullRequest\", label: \"Pull Request\" },\n  ];\n\n  // 選択されたタブはlocal stateとして扱う\n  const [selectedTab, changeTab] = useState(\"issue\");\n\n  return (\n    <IndexTemplate tabs={tabs} selectedTab={selectedTab} onClick={changeTab} />\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../variables\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  margin: 2rem 0;\n  border-radius: 6px;\n  border: 1px solid ${colors.border};\n`;\n\nconst ProfilePicture = styled.div`\n  padding: 1rem;\n  width: 50%;\n`;\n\nconst ProfileInformation = styled.div`\n  padding: 1rem;\n  width: 50%;\n`;\n\nconst Label = styled.label`\n  color: ${colors.weak};\n`;\n\nconst ProfileItem = styled.p`\n  padding: 1rem 0;\n  font-size: 1.2rem;\n`;\n\nconst ProfileWrapper = styled.div`\n  padding: 1rem;\n`;\n\nconst Profile = ({ user }) => {\n  return (\n    <ProfileWrapper>\n      <h1>Profile</h1>\n      <ProfileContainer>\n        <ProfilePicture>\n          <Label>プロフィール</Label>\n          <ProfileItem>\n            <img src={user.profileUrl} alt=\"profile\" />\n          </ProfileItem>\n        </ProfilePicture>\n        <ProfileInformation>\n          <div>\n            <Label>ユーザー名</Label>\n            <ProfileItem>{user.userName}</ProfileItem>\n          </div>\n          <div>\n            <Label>メールアドレス</Label>\n            <ProfileItem>{user.email}</ProfileItem>\n          </div>\n        </ProfileInformation>\n      </ProfileContainer>\n    </ProfileWrapper>\n  );\n};\n\nProfile.propTypes = {\n  user: PropTypes.object,\n};\n\nexport default Profile;\n","// import rootReducer from \"../reducers\";\nimport { connect } from \"react-redux\";\n// import * as actions from \"../actions\";\nimport Profile from \"../pages/Profile\";\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.profile,\n  };\n};\n\nconst mapDispatchToProps = () => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport PropTypes from \"prop-types\";\n\nModal.setAppElement(\"#root\"); // アクセシビリティのために宣言\n\nconst ModalWrapper = ({ isOpen, component, hideModal }) => {\n  return (\n    <>\n      {/* onRequestCloseに渡した関数は、モーダルの外側をクリックしたときに実行される */}\n      {isOpen && (\n        <Modal onRequestClose={hideModal} isOpen={isOpen}>\n          {component}\n        </Modal>\n      )}\n    </>\n  );\n};\n\nModalWrapper.propTypes = {\n  isOpen: PropTypes.bool,\n  component: PropTypes.object,\n  hideModal: PropTypes.func,\n};\n\nexport default ModalWrapper;\n","import { connect } from \"react-redux\";\nimport ModalWrapper from \"../components/organisms/ModalWrapper\";\nimport { hideModal } from \"../actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    isOpen: state.modal.isOpen,\n    component: state.modal.component,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    hideModal: () => {\n      dispatch(hideModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalWrapper);\n","import React from \"react\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport Header from \"./components/organisms/Header\";\nimport { Route, Switch } from \"react-router-dom\";\nimport IssuePage from \"./pages/Issue\";\nimport PullRequest from \"./pages/PullRequest\";\nimport Index from \"./pages/Index.js\";\nimport styled from \"styled-components\";\nimport Profile from \"./containers/Profile\";\nimport ModalWrapper from \"./containers/Modal\";\n\nconst ContentWrapper = styled.div`\n  padding: 2rem 1rem;\n  margin: 0 auto;\n  max-width: 896px;\n`;\n\nfunction App() {\n  return (\n    <div>\n      <ModalWrapper />\n      <GlobalStyle />\n      <Header />\n      <ContentWrapper>\n        <Switch>\n          <Route path=\"/issue\" component={IssuePage} />\n          <Route path=\"/pull-request\" component={PullRequest} />\n          <Route path=\"/profile\" component={Profile} />\n          <Route exact path=\"/\" component={Index} />\n          {/* pathの検索方法が前方置換なのでexactを宣言して完全一致にしてあげる */}\n        </Switch>\n      </ContentWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_ISSUE, EDIT_ISSUE, DELETE_ISSUE } from \"../actions\";\n\nconst mockData = [\n  {\n    id: 1,\n    title: \"A bug in Top Page\",\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    status: \"Open\",\n    author: \"\",\n    createdAt: \"01-01-2021\",\n    updatedAt: \"01-01-2021\",\n  },\n  {\n    id: 2,\n    title: \"A problem of performance in Top Page\",\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    status: \"Open\",\n    author: \"\",\n    createdAt: \"01-01-2021\",\n    updatedAt: \"01-01-2021\",\n  },\n  {\n    id: 3,\n    title: \"fix layout\",\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    status: \"Open\",\n    author: \"\",\n    createdAt: \"01-01-2021\",\n    updatedAt: \"01-01-2021\",\n  },\n];\n\nconst initialState = {\n  index: mockData.length, // dataの長さ ≒ dataのidの値\n  data: mockData, // data自体\n};\n\nconst issueReducer = (state = initialState, action) => {\n  const { index, data } = state; // 現在のdataのindex(要素の数)とdata(要素データ自体)を代入。\n\n  // newIndex: 新しいstateのindexキーの中身\n  // newData: 新しいstateのdataキーの中身\n  const newIndex = index + 1; // indexに1を加算して'ISSUEADD'で追加する要素のためのindexを用意する。\n  const newData = [...data]; // 新しいデータのための「枠」を作成(今までのデータを引き継ぐ)\n\n  switch (action.type) {\n    case ADD_ISSUE:\n      // 配列の要素はindex数より1少ないので周りくどいけど -1 しておく(indexに指定してもいいけどニュアンスが一致しないからやめておく)\n      newData[newData.length] = { ...action.payload, id: newIndex }; // payloadにはidは設定されていない想定なのでここでidを指定してあげる。\n      return { index: newIndex, data: newData };\n    case EDIT_ISSUE:\n      // 配列でissueのデータを持っているので、\n      newData[\n        newData.findIndex((item) => {\n          return item.id == action.payload.id;\n        })\n      ] = { ...action.payload };\n      return { ...state, data: [...newData] };\n    case DELETE_ISSUE:\n      return {\n        ...state,\n        data: newData.filter((item) => item.id !== action.payload.id),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default issueReducer;\n","const initialState = {\n  profileUrl:\n    \"https://avatars1.githubusercontent.com/u/25723193?s=60&u=5f2d871352830fdf1a79ee285e0712044105ca91&v=4\",\n  userName: \"yukiyohure\",\n  email: \"example@mock.com\",\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;\n","import { HIDE_MODAL, SHOW_MODAL } from \"../../actions\";\n\nconst initialState = {\n  isOpen: false,\n  component: {},\n};\n\nconst modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return {\n        ...state,\n        isOpen: true,\n        component: action.payload,\n      };\n    case HIDE_MODAL:\n      return {\n        ...state,\n        isOpen: false,\n        component: {},\n      };\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;\n","import issueReducer from \"./issue\";\nimport profileReducer from \"./profile\";\nimport modalReducer from \"./ui/modal\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducers = combineReducers({\n  issue: issueReducer,\n  profile: profileReducer,\n  modal: modalReducer,\n});\n\nexport default rootReducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'; // ルーティングに必要なRouterコンポーネントをimport\nimport { createStore } from 'redux';\nimport rootReducers from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  rootReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // devツール表示のための記述。\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/*\n      Routerは子要素に一つのコンポーネントしか受け付けないので、\n      基本的に一番親のコンポーネントを囲むように設置。\n      */}\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}