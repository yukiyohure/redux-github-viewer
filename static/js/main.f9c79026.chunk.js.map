{"version":3,"sources":["variables.js","GlobalStyle.js","components/molecules/Menu.js","components/organisms/DropdownMenu.js","components/organisms/Header.js","actions/index.js","components/atoms/TextInput.js","components/atoms/Button.js","components/atoms/TextArea.js","components/atoms/ErrorMessage.js","utils/index.js","components/templates/NewIssue.js","components/organisms/SearchBar.js","components/templates/EditIssue.js","components/organisms/IssueContents.js","components/templates/Issue.js","containers/Issue.js","pages/Issue.js","pages/PullRequest.js","components/organisms/TabHeader.js","components/templates/PullRequest.js","components/templates/IndexTemplate.js","pages/Index.js","pages/Profile.js","containers/Profile.js","components/organisms/ModalWrapper.js","containers/Modal.js","App.js","reportWebVitals.js","reducers/issue.js","reducers/profile.js","reducers/ui/modal.js","reducers/index.js","index.js"],"names":["colors","GlobalStyle","createGlobalStyle","Wrapper","styled","div","MenuItem","li","MenuLinks","key","label","to","Menu","forwardRef","ref","onClick","map","displayName","Container","MenuIcon","FontAwesomeIcon","DropdownMenu","useState","isShown","setShown","menuRef","useRef","useEffect","handleClickOutside","e","current","contains","target","document","addEventListener","removeEventListener","handleMenuClick","stopPropagation","icon","faBars","HeaderContainer","Title","h1","HeaderLinkList","ul","links","linkText","Header","link","ADD_ISSUE","EDIT_ISSUE","DELETE_ISSUE","SHOW_MODAL","HIDE_MODAL","hideModal","type","Text","input","TextInput","placeholder","value","onChange","BaseButton","button","buttonStyleLists","default","primary","danger","Button","styleType","component","React","createElement","TextAreaInput","textarea","TextArea","RedField","p","ErrorMessage","message","getFormatedDate","dateObject","year","getFullYear","month","getMonth","slice","day","getDate","validateRequired","errorMessage","InputSection","MessageContainer","section","FieldLabel","Field","CloseButton","a","Footer","NewIssue","addIssue","profile","issueTitle","setIssueTitle","issueDescription","setIssueDescription","title","description","errors","setErrors","now","Date","titleError","descriptionError","payload","status","author","userName","createdAt","updatedAt","SearchForm","ActionButtons","SearchBar","deleteIssue","searchWord","showModal","checkedIssueIdList","setIsCheckedAllCheckbox","length","forEach","id","EditIssue","issue","editIssue","issueState","setIssueState","IssueTable","table","TableRow","tr","IssueContents","issueData","setCheckedIssueIdList","isCheckedAllCheckbox","allIdList","item","checked","prevState","newState","readOnly","row","includes","filter","onClickCheckbox","Issue","setSearchWord","filterdIssueData","connect","state","data","dispatch","IssuePage","PullRequest","TabList","Tab","isActive","TabHeader","selectedTab","tabs","tabContents","IndexTemplate","tabContent","Index","changeTab","ProfileContainer","ProfilePicture","ProfileInformation","Label","ProfileItem","ProfileWrapper","Profile","user","src","profileUrl","alt","email","Modal","setAppElement","ModalWrapper","isOpen","onRequestClose","modal","ContentWrapper","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mockData","initialState","index","issueReducer","action","newIndex","newData","findIndex","profileReducer","modalReducer","rootReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"+NAAaA,EACE,OADFA,EAEL,UAFKA,EAGH,UAHGA,EAIF,UAJEA,EAKG,UALHA,EAMI,UANJA,EAOS,UAPTA,EAQH,UARGA,EASG,UATHA,EAUO,UAVPA,EAWE,UAXFA,EAYQ,UAZRA,EAaM,OAbNA,EAcJ,OAdIA,EAgBD,UAhBCA,EAiBK,U,yoBCdX,IAAMC,EAAcC,YAAH,IA6BXF,EAIT,I,ujBC9BJ,IAAMG,EAAUC,IAAOC,IAAV,IAKFL,EAGKA,GAIVM,EAAWF,IAAOG,GAAV,IAEDP,EAMOA,EACLA,GAKTQ,EAAY,CAChB,CAAEC,IAAK,MAAOC,MAAO,MAAOC,GAAI,KAChC,CAAEF,IAAK,UAAWC,MAAO,eAAgBC,GAAI,YAC7C,CAAEF,IAAK,QAASC,MAAO,QAASC,GAAI,UACpC,CAAEF,IAAK,cAAeC,MAAO,eAAgBC,GAAI,kBAG7CC,EAAOC,sBAAW,WAAcC,GAAS,IAApBC,EAAmB,EAAnBA,QACzB,OACE,cAACZ,EAAD,CAASW,IAAKA,EAAd,SACE,6BACGN,EAAUQ,KAAI,YAAyB,IAAtBP,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC5B,OACE,cAACL,EAAD,UACE,cAAC,IAAD,CAAMK,GAAIA,EAAII,QAASA,EAAvB,SACGL,KAFUD,aAY3BG,EAAKK,YAAc,OAMJL,Q,2NCxDf,IAAMM,EAAYd,IAAOC,IAAV,KAMTc,EAAWf,YAAOgB,IAAPhB,CAAH,IAEHJ,GAqCIqB,EAlCM,WAAO,IAAD,EACGC,oBAAS,GADZ,mBAClBC,EADkB,KACTC,EADS,KAEnBC,EAAUC,iBAAO,MAGvBC,qBAAU,WACR,IAAMC,EAAqB,SAACC,GAEtBJ,EAAQK,UAAYL,EAAQK,QAAQC,SAASF,EAAEG,SACjDR,GAAS,IAOb,OAFAS,SAASC,iBAAiB,QAASN,GAE5B,WACLO,oBAAoB,QAASP,MAE9B,IAEH,IAAMQ,EAAkB,SAACP,GACvBA,EAAEQ,kBACFb,GAAUD,IAGZ,OACE,eAACL,EAAD,WACE,cAACC,EAAD,CAAUJ,QAASqB,EAAiBE,KAAMC,MACzChB,GAAW,cAAC,EAAD,CAAMT,IAAKW,EAASV,QAASqB,Q,slBCzC/C,IAAMI,EAAkBpC,IAAOC,IAAV,IAILL,GAIVyC,EAAQrC,IAAOsC,GAAV,IAIE1C,GAIP2C,EAAiBvC,IAAOwC,GAAV,IAUP5C,GAKP6C,EAAQ,CACZ,CAAElC,GAAI,SAAUF,IAAK,QAASqC,SAAU,SACxC,CAAEnC,GAAI,gBAAiBF,IAAK,cAAeqC,SAAU,iBA2BxCC,EAxBA,WACb,OACE,eAACP,EAAD,WACE,8BACE,cAACC,EAAD,UACE,cAAC,IAAD,CAAM9B,GAAG,IAAT,+BAGJ,cAACgC,EAAD,UACGE,EAAM7B,KAAI,SAACgC,GACV,OACE,+BACG,IAED,cAAC,IAAD,CAAMrC,GAAIqC,EAAKrC,GAAf,SAAoBqC,EAAKF,aAHlBE,EAAKvC,UAQpB,cAAC,EAAD,Q,OC1DOwC,EAAY,YACZC,GAAa,aACbC,GAAe,eACfC,GAAa,aACbC,GAAa,aA8BbC,GAAY,WACvB,MAAO,CACLC,KAAMF,K,4UCjCV,IAAMG,GAAOpD,IAAOqD,MAAV,MASJtD,GAAUC,IAAOC,IAAV,KACSL,GAwBP0D,GAnBG,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvC,OACE,cAAC,GAAD,UACE,cAACL,GAAD,CACED,KAAK,OACLI,YAAaA,EACbC,MAAOA,EACPC,SAAU,SAAChC,GAAD,OAAOgC,EAAShC,EAAEG,OAAO4B,a,m0BCvB3C,IAAME,GAAa1D,IAAO2D,OAAV,KASL/D,GAiCLgE,GAAmB,CACvBC,QAASH,GACTI,QAtBoB9D,YAAO0D,GAAP1D,CAAH,KACHJ,EACMA,EACXA,EAEOA,EACMA,GAiBtBmE,OAbmB/D,YAAO0D,GAAP1D,CAAH,KACFJ,EACMA,EACXA,EAEOA,EACMA,IAqBToE,GAXA,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,UAAW3D,EAAqB,EAArBA,MAAOK,EAAc,EAAdA,QAC5BuD,EAAYN,GAAiBK,IAAcL,GAAiBC,QAClE,OAAOM,IAAMC,cAAcF,EAAW,CAAEvD,WAAWL,I,yVCjDrD,IAAM+D,GAAgBrE,IAAOsE,SAAV,MAUbvE,GAAUC,IAAOC,IAAV,KACSL,GAuBP2E,GAlBE,SAAC,GAAsC,IAApChB,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACtC,OACE,cAAC,GAAD,UACE,cAACY,GAAD,CACEd,YAAaA,EACbC,MAAOA,EACPC,SAAU,SAAChC,GAAD,OAAOgC,EAAShC,EAAEG,OAAO4B,a,4KCvB3C,IAAMgB,GAAWxE,IAAOyE,EAAV,KACH7E,EAGKA,GAYD8E,GARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,cAACH,GAAD,UAAWG,KCdPC,GAAkB,SAACC,GAC7B,IAAMC,EAAOD,EAAWE,cAClBC,GAAS,MAAQH,EAAWI,WAAa,IAAIC,OAAO,GACpDC,GAAO,KAAON,EAAWO,WAAWF,OAAO,GACjD,MAAM,GAAN,OAAUF,EAAV,YAAmBG,EAAnB,YAA0BL,IAGhBO,GAAmB,SAAC7B,EAAO8B,GACtC,MAAiB,KAAV9B,EAAe8B,EAAe,I,+pCCCvC,IAAMvF,GAAUC,IAAOC,IAAV,MAKPsF,GAAevF,IAAOC,IAAV,MAIZuF,GAAmBxF,IAAOyF,QAAV,MAKhBC,GAAa1F,IAAOM,MAAV,MAKVqF,GAAQ3F,IAAOC,IAAV,MAIL2F,GAAc5F,IAAO6F,EAAV,MASXC,GAAS9F,IAAOC,IAAV,MAsFG8F,GA5EE,SAAC,GAAsC,IAApC7C,EAAmC,EAAnCA,UAAW8C,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAAc,EACjB/E,mBAAS,IADQ,mBAC9CgF,EAD8C,KAClCC,EADkC,OAELjF,mBAAS,IAFJ,mBAE9CkF,EAF8C,KAE5BC,EAF4B,OAIzBnF,mBAAS,CAAEoF,MAAO,GAAIC,YAAa,KAJV,mBAI9CC,EAJ8C,KAItCC,EAJsC,KAM/CC,EAAM9B,GAAgB,IAAI+B,MA+BhC,OACE,eAAC,GAAD,WACE,yDACA,eAACpB,GAAD,WACE,eAACI,GAAD,WACE,cAACD,GAAD,uCACA,cAAC,GAAD,CACEnC,YAAY,iFACZE,SAAU0C,OAGd,eAACR,GAAD,WACE,cAACD,GAAD,2BACA,cAAC,GAAD,CACEnC,YAAY,qEACZE,SAAU4C,UAIhB,eAACb,GAAD,WACGgB,EAAOF,OAAS,cAAC,GAAD,CAAc3B,QAAS6B,EAAOF,QAC9CE,EAAOD,aACN,cAAC,GAAD,CAAc5B,QAAS6B,EAAOD,iBAGlC,eAACT,GAAD,WACE,cAAC,GAAD,CAAQ7B,UAAU,UAAU3D,MAAM,eAAKK,QAvD5B,WAEf,IAAMiG,EAAavB,GACjBa,EACA,kFAEIW,EAAmBxB,GACvBe,EACA,sEAIF,GAAIQ,GAAcC,EAChBJ,EAAU,CAAEH,MAAOM,EAAYL,YAAaM,QAD9C,CAKA,IAAMC,EAAU,CACdR,MAAOJ,EACPK,YAAaH,EACbW,OAAQ,OACRC,OAAQf,EAAQgB,SAChBC,UAAWR,EACXS,UAAWT,GAEbV,EAASc,GACT5D,QA8BI,cAAC0C,GAAD,CAAajF,QAASuC,EAAtB,uC,gUC5GR,IAAMnD,GAAUC,IAAOC,IAAV,MAKPmH,GAAapH,IAAOC,IAAV,MAKVoH,GAAgBrH,IAAOC,IAAV,MAoEJqH,GAhEG,SAAC,GAUZ,IATLrB,EASI,EATJA,QACAD,EAQI,EARJA,SACAuB,EAOI,EAPJA,YACAC,EAMI,EANJA,WACA/D,EAKI,EALJA,SACAgE,EAII,EAJJA,UACAvE,EAGI,EAHJA,UACAwE,EAEI,EAFJA,mBACAC,EACI,EADJA,wBAWA,OACE,eAAC,GAAD,WACE,uCACA,cAACP,GAAD,UACE,cAAC,GAAD,CACE7D,YAAY,gCACZC,MAAOgE,EACP/D,SAAUA,MAGd,eAAC4D,GAAD,WACE,cAAC,GAAD,CACE1G,QAAS,kBACP8G,EAAU,CACRvD,UACE,cAAC,GAAD,CACE8B,SAAUA,EACV9C,UAAWA,EACX+C,QAASA,OAKjBhC,UAAU,UACV3D,MAAM,QAER,cAAC,GAAD,CAAQK,QAnCQ,WAChB+G,EAAmBE,SACrBF,EAAmBG,SAAQ,SAACC,GAC1BP,EAAYO,MAGdH,GAAwB,KA6BU1D,UAAU,SAAS3D,MAAM,kB,0qCC1DjE,IAAMP,GAAUC,IAAOC,IAAV,MAKPsF,GAAevF,IAAOC,IAAV,MAIZuF,GAAmBxF,IAAOyF,QAAV,MAKhBC,GAAa1F,IAAOM,MAAV,MAKVqF,GAAQ3F,IAAOC,IAAV,MAIL2F,GAAc5F,IAAO6F,EAAV,MASXC,GAAS9F,IAAOC,IAAV,MA+FG8H,GArFG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAO9E,EAA2B,EAA3BA,UAAW+E,EAAgB,EAAhBA,UAAgB,EACjB/G,mBAAS8G,EAAMjB,QADE,mBAC9CmB,EAD8C,KAClCC,EADkC,OAEjBjH,mBAAS8G,EAAM1B,OAFE,mBAE9CJ,EAF8C,KAElCC,EAFkC,OAGLjF,mBAAS8G,EAAMzB,aAHV,mBAG9CH,EAH8C,KAG5BC,EAH4B,OAIzBnF,mBAAS,CAAEoF,MAAO,GAAIC,YAAa,KAJV,mBAI9CC,EAJ8C,KAItCC,EAJsC,KAM/CC,EAAM9B,GAAgB,IAAI+B,MAgChC,OACE,eAAC,GAAD,WACE,yDACA,eAAC,GAAD,WACE,eAAC,GAAD,WACE,cAAC,GAAD,uCACA,cAAC,GAAD,CACEpD,YAAY,iFACZC,MAAO0C,EACPzC,SAAU0C,OAGd,eAAC,GAAD,WACE,cAAC,GAAD,2BACA,cAAC,GAAD,CACE5C,YAAY,qEACZC,MAAO4C,EACP3C,SAAU4C,OAGd,cAAC,GAAD,UACE,yBAAQ7C,MAAO0E,EAAYzE,SAnDZ,SAAChC,GACtB0G,EAAc1G,EAAEG,OAAO4B,QAkDjB,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,QAAd,2BAIN,eAAC,GAAD,WACGgD,EAAOF,OAAS,cAAC,GAAD,CAAc3B,QAAS6B,EAAOF,QAC9CE,EAAOD,aACN,cAAC,GAAD,CAAc5B,QAAS6B,EAAOD,iBAGlC,eAAC,GAAD,WACE,cAAC,GAAD,CAAQtC,UAAU,UAAU3D,MAAM,eAAKK,QA5D5B,WACf,IAAMiG,EAAavB,GACjBa,EACA,kFAEIW,EAAmBxB,GACvBe,EACA,sEAGF,GAAIQ,GAAcC,EAChBJ,EAAU,CAAEH,MAAOM,EAAYL,YAAaM,QAD9C,CAKA,IAAMC,EAAO,6BACRkB,GADQ,IAEX1B,MAAOJ,EACPa,OAAQmB,EACR3B,YAAaH,EACbe,UAAWT,IAEbuB,EAAUnB,GACV5D,QAsCI,cAAC,GAAD,CAAavC,QAASuC,EAAtB,uC,84BCtHR,IAAMnD,GAAUC,IAAOC,IAAV,MAIPmI,GAAapI,IAAOqI,MAAV,KACMzI,GAKhB0I,GAAWtI,IAAOuI,GAAV,KAgBiB3I,GAoHhB4I,GA5GO,SAAC,GAShB,IARLC,EAQI,EARJA,UACAhB,EAOI,EAPJA,UACAvE,EAMI,EANJA,UACA+E,EAKI,EALJA,UACAP,EAII,EAJJA,mBACAgB,EAGI,EAHJA,sBACAC,EAEI,EAFJA,qBACAhB,EACI,EADJA,wBAEMiB,EAAYH,EAAU7H,KAAI,SAACiI,GAAD,OAAUA,EAAKf,MAsB/C,OACE,cAAC,GAAD,UACE,eAACM,GAAD,WACE,gCACE,eAACE,GAAD,WACE,6BACE,uBACEnF,KAAK,WACL2F,QAASH,EACThI,QA7Ba,WACzBgH,GAAwB,SAACoB,GACvB,IAAMC,GAAYD,EAIlB,OADWL,EAAXM,EAAiCJ,EAAmC,IAC7DI,MAwBGC,UAAQ,MAGZ,uBACA,gEACA,oDACA,0DACA,+DAGJ,gCACGR,EAAUb,OACTa,EAAU7H,KAAI,SAACsI,GACb,OACE,eAACZ,GAAD,CAEE3H,QAAS,kBACP8G,EAAU,CACRvD,UACE,cAAC,GAAD,CACE8D,MAAOkB,EACPhG,UAAWA,EACX+E,UAAWA,OARrB,UAcE,6BACE,uBACE9E,KAAK,WACLxC,QAAS,SAACc,GAAD,OAnDL,SAACA,EAAGqG,GAC1BrG,EAAEQ,kBACEyF,EAAmByB,SAASrB,GAE9BY,EAAsBhB,EAAmB0B,QAAO,SAACP,GAAD,OAAUA,GAAQf,MAGlEY,EAAsB,GAAD,oBAAKhB,GAAL,CAAyBI,KA4CduB,CAAgB5H,EAAGyH,EAAIpB,KACvCgB,QAASpB,EAAmByB,SAASD,EAAIpB,IACzCmB,UAAQ,MAGZ,6BAAKC,EAAI5C,QACT,6BAAK4C,EAAInC,SACT,6BAAKmC,EAAIlC,SACT,6BAAKkC,EAAIhC,YACT,6BAAKgC,EAAI/B,cAzBJ+B,EAAIpB,OA8Bf,cAACQ,GAAD,UACE,kG,gHC1Hd,IAAMvI,GAAUC,IAAOC,IAAV,MA8DEqJ,GAzDD,SAAC,GAQR,IAPLb,EAOI,EAPJA,UACAxC,EAMI,EANJA,QACAD,EAKI,EALJA,SACAiC,EAII,EAJJA,UACAV,EAGI,EAHJA,YACAE,EAEI,EAFJA,UACAvE,EACI,EADJA,UACI,EAEgChC,mBAAS,IAFzC,mBAEGsG,EAFH,KAEe+B,EAFf,OAIgDrI,mBAAS,IAJzD,mBAIGwG,EAJH,KAIuBgB,EAJvB,OAKoDxH,oBAAS,GAL7D,mBAKGyH,EALH,KAKyBhB,EALzB,KAOE6B,EAAmBf,EAAUW,QAAO,SAACP,GACzC,OAAOA,EAAKvC,MAAM6C,SAAS3B,MAG7B,OACE,eAAC,GAAD,WACE,cAAC,GAAD,CACEvB,QAASA,EACTwB,UAAWA,EACXzB,SAAUA,EACVuB,YAAaA,EACbC,WAAYA,EACZ/D,SAAU8F,EACVrG,UAAWA,EACXwE,mBAAoBA,EACpBC,wBAAyBA,IAE3B,cAAC,GAAD,CACEc,UAAWe,EACXvD,QAASA,EACTwB,UAAWA,EACXvE,UAAWA,EACX+E,UAAWA,EACXP,mBAAoBA,EACpBgB,sBAAuBA,EACvBC,qBAAsBA,EACtBhB,wBAAyBA,QCVlB8B,iBAhCS,SAACC,GAEvB,MAAO,CAGLjB,UAAWiB,EAAM1B,MAAM2B,KACvB1D,QAASyD,EAAMzD,YAMQ,SAAC2D,GAC1B,MAAO,CACL5D,SAAU,SAACc,GACT8C,EXfG,CACLzG,KAAMN,EACNiE,QWaoBA,KAEpBmB,UAAW,SAACnB,GACV8C,EXXG,CACLzG,KAAML,GACNgE,QWSqBA,KAErBS,YAAa,SAACT,GACZ8C,EXPG,CACLzG,KAAMJ,GACN+D,QAAS,CAACgB,GWKahB,MAEvBW,UAAW,SAACvD,GACV0F,EXJmB,SAAC,GAAmB,IAAjB1F,EAAgB,EAAhBA,UAC1B,MAAO,CACLf,KAAMH,GACN8D,QAAS5C,GWCEuD,CAAUvD,KAErBhB,UAAW,WACT0G,EAAS1G,UAKAuG,CAA6CH,ICnC7CO,GAJG,WAChB,OAAO,cAAC,GAAD,KCEMC,GAJK,WAClB,OAAO,8C,4XCET,IAAMC,GAAU/J,IAAOwC,GAAV,MAIPwH,GAAMhK,IAAOG,GAAV,MAOO,qBAAG8J,SACP,oBAAgBrK,GAAkB,MAC3B,qBAAGqK,SACP,GAAH,oBAAqBrK,MAChB,qBAAGqK,SACR,oBAAgBrK,GAAkB,MAC5B,qBAAGqK,SACT,oBAAgBrK,GAAkB,MAwB/BsK,GArBG,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,KAAMzJ,EAAc,EAAdA,QACtC,OACE,cAACoJ,GAAD,UACGK,EAAKxJ,KAAI,YAAqB,IAAlBP,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MACV2J,EAAW5J,IAAQ8J,EACzB,OACE,cAACH,GAAD,CAAKC,SAAUA,EAAoBtJ,QAAS,kBAAMA,EAAQN,IAA1D,SACGC,GAD2BD,SC1BzByJ,GAJK,WAClB,OAAO,+CCIHO,GAAc,CAClB,CAAEhK,IAAK,QAAS6D,UAAW,cAAC,GAAD,KAC3B,CAAE7D,IAAK,cAAe6D,UAAW,cAAC,GAAD,MAoBpBoG,GAjBO,SAAC,GAAoC,IAAlCH,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,KAAMzJ,EAAc,EAAdA,QAC1C,OACE,qCACE,cAAC,GAAD,CAAWyJ,KAAMA,EAAMD,YAAaA,EAAaxJ,QAASA,IACzD0J,GAAYzJ,KAAI,SAAC2J,GAChB,OAAOA,EAAWlK,MAAQ8J,EAAcI,EAAWrG,UAAY,oCCCxDsG,GAfD,WAEZ,IAFkB,EAQetJ,mBAAS,SARxB,mBAQXiJ,EARW,KAQEM,EARF,KAUlB,OACE,cAAC,GAAD,CAAeL,KATJ,CACX,CAAE/J,IAAK,QAASC,MAAO,SACvB,CAAED,IAAK,cAAeC,MAAO,iBAOF6J,YAAaA,EAAaxJ,QAAS8J,K,ypBCTlE,IAAMC,GAAmB1K,IAAOC,IAAV,KAIAL,GAGhB+K,GAAiB3K,IAAOC,IAAV,MAKd2K,GAAqB5K,IAAOC,IAAV,MAKlB4K,GAAQ7K,IAAOM,MAAV,KACAV,GAGLkL,GAAc9K,IAAOyE,EAAV,MAKXsG,GAAiB/K,IAAOC,IAAV,MAkCL+K,GA9BC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACE,eAACF,GAAD,WACE,yCACA,eAACL,GAAD,WACE,eAACC,GAAD,WACE,cAACE,GAAD,mDACA,cAACC,GAAD,UACE,qBAAKI,IAAKD,EAAKE,WAAYC,IAAI,iBAGnC,eAACR,GAAD,WACE,gCACE,cAACC,GAAD,6CACA,cAACC,GAAD,UAAcG,EAAKhE,cAErB,gCACE,cAAC4D,GAAD,yDACA,cAACC,GAAD,UAAcG,EAAKI,qBCtChB5B,iBAVS,SAACC,GACvB,MAAO,CACLuB,KAAMvB,EAAMzD,YAIW,WACzB,MAAO,KAGMwD,CAA6CuB,I,oBCX5DM,KAAMC,cAAc,SAEpB,IAmBeC,GAnBM,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OAAQvH,EAA2B,EAA3BA,UAAWhB,EAAgB,EAAhBA,UACzC,OACE,mCAEGuI,GACC,cAAC,KAAD,CAAOC,eAAgBxI,EAAWuI,OAAQA,EAA1C,SACGvH,OCOIuF,iBAfS,SAACC,GACvB,MAAO,CACL+B,OAAQ/B,EAAMiC,MAAMF,OACpBvH,UAAWwF,EAAMiC,MAAMzH,cAIA,SAAC0F,GAC1B,MAAO,CACL1G,UAAW,WACT0G,EAAS1G,UAKAuG,CAA6C+B,I,wICR5D,IAAMI,GAAiB5L,IAAOC,IAAV,MA2BL4L,OArBf,WACE,OACE,cAAC,IAAD,CAAQC,SAAS,uBAAjB,SACE,gCACE,cAACR,GAAD,IACA,cAACzL,EAAD,IACA,cAAC,EAAD,IACA,cAAC+L,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOG,KAAK,SAAS7H,UAAW2F,KAChC,cAAC,IAAD,CAAOkC,KAAK,gBAAgB7H,UAAW4F,KACvC,cAAC,IAAD,CAAOiC,KAAK,WAAW7H,UAAW8G,KAClC,cAAC,IAAD,CAAOgB,OAAK,EAACD,KAAK,IAAI7H,UAAWsG,gBCjB9ByB,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCLRQ,GAAW,CACf,CACE5E,GAAI,EACJxB,MAAO,oBACPC,YAAa,2DACbQ,OAAQ,OACRC,OAAQ,OACRE,UAAW,aACXC,UAAW,cAEb,CACEW,GAAI,EACJxB,MAAO,uCACPC,YAAa,2DACbQ,OAAQ,OACRC,OAAQ,OACRE,UAAW,aACXC,UAAW,cAEb,CACEW,GAAI,EACJxB,MAAO,aACPC,YAAa,2DACbQ,OAAQ,OACRC,OAAQ,OACRE,UAAW,aACXC,UAAW,eAITwF,GAAe,CACnBC,MAAOF,GAAS9E,OAChB+B,KAAM+C,IAkCOG,GA/BM,WAAmC,IAAlCnD,EAAiC,uDAAzBiD,GAAcG,EAAW,uCAC7CF,EAAgBlD,EAAhBkD,MAAOjD,EAASD,EAATC,KAIToD,EAAWH,EAAQ,EACnBI,EAAO,aAAOrD,GAEpB,OAAQmD,EAAO3J,MACb,KAAKN,EAGH,OADAmK,EAAQA,EAAQpF,QAAhB,6BAA+BkF,EAAOhG,SAAtC,IAA+CgB,GAAIiF,IAC5C,CAAEH,MAAOG,EAAUpD,KAAMqD,GAClC,KAAKlK,GAOH,OALAkK,EACEA,EAAQC,WAAU,SAACpE,GACjB,OAAOA,EAAKf,IAAMgF,EAAOhG,QAAQgB,OAFrC,gBAISgF,EAAOhG,SACT,6BAAK4C,GAAZ,IAAmBC,KAAK,aAAKqD,KAC/B,KAAKjK,GACH,OAAO,6BACF2G,GADL,IAEEC,KAAMqD,EAAQ5D,QAAO,SAACP,GAAD,OAAUA,EAAKf,KAAOgF,EAAOhG,QAAQgB,QAE9D,QACE,OAAO4B,IChEPiD,GAAe,CACnBxB,WACE,wGACFlE,SAAU,aACVoE,MAAO,oBAUM6B,GAPQ,WAAmC,IAAlCxD,EAAiC,uDAAzBiD,GAAcG,EAAW,uCAGnD,OAFIA,EAAO3J,KAEJuG,GCRPiD,GAAe,CACnBlB,QAAQ,EACRvH,UAAW,IAsBEiJ,GAnBM,WAAmC,IAAlCzD,EAAiC,uDAAzBiD,GAAcG,EAAW,uCACrD,OAAQA,EAAO3J,MACb,KAAKH,GACH,OAAO,6BACF0G,GADL,IAEE+B,QAAQ,EACRvH,UAAW4I,EAAOhG,UAEtB,KAAK7D,GACH,OAAO,6BACFyG,GADL,IAEE+B,QAAQ,EACRvH,UAAW,KAEf,QACE,OAAOwF,ICXE0D,GANMC,aAAgB,CACnCrF,MAAO6E,GACP5G,QAASiH,GACTvB,MAAOwB,KCEHG,GAAQC,aACZH,GACAI,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,CAAUN,MAAOA,GAAjB,SAKI,cAAC,IAAD,UACE,cAAC,GAAD,UAIRzL,SAASgM,eAAe,SAM1B5B,O","file":"static/js/main.f9c79026.chunk.js","sourcesContent":["export const colors = {\n  defaultText: \"#333\",\n  weak: \"#586069\",\n  border: \"#e1e4e8\",\n  primary: \"#42c360\",\n  hoverPrimary: \"#28a745\",\n  primaryShadow: \"#55A846\",\n  hoverPrimaryShadow: \"#208437\",\n  danger: \"#d73a49\",\n  dangerShadow: \"#AF2D2A\",\n  dangerBackground: \"#F1BABF\",\n  hoverDanger: \"#af1c2a\",\n  hoverDangerShadow: \"#671019\",\n  backgroundBlack: \"#333\",\n  white: \"#fff\",\n  black: \"#000\",\n  linkText: \"#0366d6\",\n  menuBackground: \"#0366d6\",\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport { colors } from \"./variables\";\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    font-family: 'Lato', 'Lucida Grande', 'Lucida Sans Unicode', Tahoma, Sans-Serif;\n    line-height: 1.5;\n    font-size: 14px;\n    padding: 0;\n    margin: 0;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n  }\n  *, *:before, *:after {\n    box-sizing: border-box;\n  }\n  h1 {\n    font-size: 2rem;\n    padding: 0;\n    margin: 0;\n  }\n  ul, p {\n    padding: 0;\n    margin: 0;\n  }\n  li {\n    list-style-type: none;\n  }\n  a {\n    text-decoration: none;\n    color: ${colors.linkText};\n  }\n\n  ${\n    \"\" /* React-modalのcontent部分のスタイリングはReactModal__Contentクラスを指定する */\n  }\n  .ReactModal__Content {\n    margin: auto;\n    width: 60%;\n  }\n`;\n","import React, { forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../variables\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Wrapper = styled.div`\n  position: absolute;\n  right: 20px;\n  width: 200px;\n  padding: 0.5rem 0;\n  color: ${colors.defaultText};\n  border-radius: 2px;\n  margin-top: 1rem;\n  background: ${colors.white};\n  box-shadow: rgba(51, 51, 51, 0.15) 1px 1px 4px 1px;\n`;\n\nconst MenuItem = styled.li`\n  a {\n    color: ${colors.defaultText};\n    font-size: 1rem;\n    padding: 0.5rem;\n    display: block;\n    font-weight: 500;\n    &:hover {\n      background: ${colors.menuBackground};\n      color: ${colors.white};\n    }\n  }\n`;\n\nconst MenuLinks = [\n  { key: \"top\", label: \"Top\", to: \"/\" },\n  { key: \"profile\", label: \"Your Profile\", to: \"/profile\" },\n  { key: \"issue\", label: \"Issue\", to: \"/issue\" },\n  { key: \"pullrequest\", label: \"Pull Request\", to: \"/pull-request\" },\n];\n\nconst Menu = forwardRef(({ onClick }, ref) => {\n  return (\n    <Wrapper ref={ref}>\n      <ul>\n        {MenuLinks.map(({ key, label, to }) => {\n          return (\n            <MenuItem key={key}>\n              <Link to={to} onClick={onClick}>\n                {label}\n              </Link>\n            </MenuItem>\n          );\n        })}\n      </ul>\n    </Wrapper>\n  )\n});\n\nMenu.displayName = 'Menu';\n\nMenu.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Menu;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"; // font-awesomeを使用するためのコンポーネント\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\"; // 実際に使用するアイコンを指定するコンポーネント\nimport { colors } from \"../../variables\";\nimport Menu from \"../molecules/Menu\";\n\nconst Container = styled.div`\n  padding: 0.5rem;\n  font-size: 1.2rem;\n`;\n\n// importしたFontAwesomeIconを継承してスタイリングを行うことができる\nconst MenuIcon = styled(FontAwesomeIcon)`\n  cursor: pointer;\n  color: ${colors.white};\n`;\n\nconst DropdownMenu = () => {\n  const [isShown, setShown] = useState(false);\n  const menuRef = useRef(null); // menuのdivのref hookを作成\n\n  // 初回のレンダリング時のみ実行させた方が無駄に関数生成されなくてメモリ節約になるのでuseEffectを使用\n  useEffect(() => {\n    const handleClickOutside = (e) => {\n      // Menuコンポーネント以外がクリックされたらメニューを閉じる\n      if (menuRef.current && !menuRef.current.contains(e.target)) {\n        setShown(false);\n      }\n    };\n    // MenuIcon以外での画面全体のどこかがクリックされるたびに呼ばれる\n    // (MenuではstopPropagationを使用してイベント伝播を止めているため)\n    document.addEventListener(\"click\", handleClickOutside);\n    // アンマウント時にリスナーを削除してメモリに優しく。\n    return () => {\n      removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []); // 依存を空にすることで、初回レンダー時のみこのuseEffectは実行される\n\n  const handleMenuClick = (e) => {\n    e.stopPropagation();\n    setShown(!isShown);\n  };\n\n  return (\n    <Container>\n      <MenuIcon onClick={handleMenuClick} icon={faBars} />\n      {isShown && <Menu ref={menuRef} onClick={handleMenuClick} />}\n    </Container>\n  );\n};\n\nexport default DropdownMenu;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { colors } from \"../../variables\";\nimport DropdownMenu from \"./DropdownMenu\";\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  align-items: cener;\n  justify-content: space-between;\n  background: ${colors.backgroundBlack};\n  padding: 1rem;\n`;\n\nconst Title = styled.h1`\n  white-space: nowrap;\n  font-size: 2rem;\n  a {\n    color: ${colors.white};\n  }\n`;\n\nconst HeaderLinkList = styled.ul`\n  display: flex;\n  align-items: center;\n  padding: 0 2rem;\n  width: 100%;\n  li {\n    margin-right: 1rem;\n    font-size: 1.1rem;\n  }\n  li > a {\n    color: ${colors.white};\n    font-size: 1.1rem;\n  }\n`;\n\nconst links = [\n  { to: \"/issue\", key: \"issue\", linkText: \"Issue\" },\n  { to: \"/pull-request\", key: \"pullRequest\", linkText: \"Pull Request\" },\n];\n\nconst Header = () => {\n  return (\n    <HeaderContainer>\n      <div>\n        <Title>\n          <Link to=\"/\">Github Viewer</Link>\n        </Title>\n      </div>\n      <HeaderLinkList>\n        {links.map((link) => {\n          return (\n            <li key={link.key}>\n              {\" \"}\n              {/* Reactが効率よくリストの差分抽出できるように一意のkeyを渡してあげる */}\n              <Link to={link.to}>{link.linkText}</Link>\n            </li>\n          );\n        })}\n      </HeaderLinkList>\n      <DropdownMenu />\n    </HeaderContainer>\n  );\n};\n\nexport default Header;\n","// action type を定数で定義するメリット\n// https://redux.js.org/recipes/reducing-boilerplate#actions\n\nexport const ADD_ISSUE = \"ADD_ISSUE\";\nexport const EDIT_ISSUE = \"EDIT_ISSUE\";\nexport const DELETE_ISSUE = \"DELETE_ISSUE\";\nexport const SHOW_MODAL = \"SHOW_MODAL\";\nexport const HIDE_MODAL = \"HIDE_MODAL\";\n\nexport const addIssue = (newData) => {\n  return {\n    type: ADD_ISSUE,\n    payload: newData,\n  };\n};\n\nexport const editIssue = (newData) => {\n  return {\n    type: EDIT_ISSUE,\n    payload: newData,\n  };\n};\n\nexport const deleteIssue = (id) => {\n  return {\n    type: DELETE_ISSUE,\n    payload: {id},\n  };\n};\n\nexport const showModal = ({ component }) => {\n  return {\n    type: SHOW_MODAL,\n    payload: component,\n  };\n};\n\nexport const hideModal = () => {\n  return {\n    type: HIDE_MODAL,\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { colors } from \"../../variables\";\n\n// テキスト入力欄のスタイリング\nconst Text = styled.input`\n  outline: none;\n  border: none;\n  background: none;\n  padding: 0.5rem;\n  font-size: 1rem;\n  width: 100%;\n`;\n\nconst Wrapper = styled.div`\n  border: 1px solid ${colors.border};\n  border-radius: 6px;\n  width: 100%;\n`;\n\nconst TextInput = ({ placeholder, value, onChange }) => {\n  return (\n    <Wrapper>\n      <Text\n        type=\"text\"\n        placeholder={placeholder}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n\nTextInput.propTypes = {\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../variables\";\nimport PropTypes from \"prop-types\";\n\nconst BaseButton = styled.button`\n  cursor: pointer;\n  border: none;\n  padding: 0.5rem 1rem;\n  margin: 4px;\n  text-align: center;\n  font-size: 1rem;\n  border-radius: 6px;\n  outline: none;\n  color: ${colors.white};\n  width: 100%;\n  min-width: 100px;\n  font-weight: bold;\n  &:active {\n    box-shadow: none;\n    transform: translateY(2px);\n    &:hover {\n      box-shadow: none;\n    }\n  }\n`;\n\nconst ButtonPrimary = styled(BaseButton)`\n  background: ${colors.primary};\n  box-shadow: 0 2px ${colors.primaryShadow};\n  color: ${colors.white};\n  &:hover {\n    background: ${colors.hoverPrimary};\n    box-shadow: 0 2px ${colors.hoverPrimaryShadow};\n  }\n`;\n\nconst ButtonDanger = styled(BaseButton)`\n  background: ${colors.danger};\n  box-shadow: 0 2px ${colors.dangerShadow};\n  color: ${colors.white};\n  &:hover {\n    background: ${colors.hoverDanger};\n    box-shadow: 0 2px ${colors.hoverDangerShadow};\n  }\n`;\n\nconst buttonStyleLists = {\n  default: BaseButton,\n  primary: ButtonPrimary,\n  danger: ButtonDanger,\n};\n\nconst Button = ({ styleType, label, onClick }) => {\n  const component = buttonStyleLists[styleType] || buttonStyleLists.default;\n  return React.createElement(component, { onClick }, label);\n};\n\nButton.propTypes = {\n  styleType: PropTypes.string,\n  label: PropTypes.string,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { colors } from \"../../variables\";\n\n// テキストエリア入力欄のスタイリング\nconst TextAreaInput = styled.textarea`\n  outline: none;\n  border: none;\n  background: none;\n  padding: 0.5rem;\n  font-size: 1rem;\n  width: 100%;\n  min-height: 150px;\n`;\n\nconst Wrapper = styled.div`\n  border: 1px solid ${colors.border};\n  border-radius: 6px;\n  width: 100%;\n`;\n\nconst TextArea = ({ placeholder, value, onChange }) => {\n  return (\n    <Wrapper>\n      <TextAreaInput\n        placeholder={placeholder}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n};\n\nTextArea.propTypes = {\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default TextArea;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../variables\";\nimport PropTypes from \"prop-types\";\n\nconst RedField = styled.p`\n  color: ${colors.danger};\n  padding: 0.5rem;\n  border-radius: 6px;\n  background: ${colors.dangerBackground};\n  margin: 0.5rem 0;\n`;\n\nconst ErrorMessage = ({ message }) => {\n  return <RedField>{message}</RedField>;\n};\n\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ErrorMessage;\n","export const getFormatedDate = (dateObject) => {\n   const year = dateObject.getFullYear();\n   const month = (\"00\" + (dateObject.getMonth() + 1)).slice(-2);\n   const day = (\"00\" + dateObject.getDate()).slice(-2);\n   return `${month}-${day}-${year}`;\n}\n\nexport const validateRequired = (value, errorMessage) => {\n  return value === \"\" ? errorMessage : \"\";\n};","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport TextInput from \"../atoms/TextInput\";\nimport TextArea from \"../atoms/TextArea\";\nimport Button from \"../atoms/Button\";\nimport PropTypes from \"prop-types\";\nimport ErrorMessage from \"../atoms/ErrorMessage\";\nimport { getFormatedDate, validateRequired } from \"../../utils\";\n\nconst Wrapper = styled.div`\n  max-width: 598px;\n  margin: auto;\n`;\n\nconst InputSection = styled.div`\n  padding: 2rem 0 1rem;\n`;\n\nconst MessageContainer = styled.section`\n  padding: 1rem;\n  min-height: 119px; /* エラー文が出てきてもボタンがしたに追いやられないよう、事前にスペースを開けておこう。*/\n`;\n\nconst FieldLabel = styled.label`\n  display: block;\n  padding: 0.5rem 0;\n`;\n\nconst Field = styled.div`\n  padding: 1rem;\n`;\n\nconst CloseButton = styled.a`\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  margin: 4px;\n  min-width: 100px;\n  text-align: center;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 0.5rem;\n  button {\n    width: auto;\n  }\n`;\n\nconst NewIssue = ({ hideModal, addIssue, profile }) => {\n  const [issueTitle, setIssueTitle] = useState(\"\");\n  const [issueDescription, setIssueDescription] = useState(\"\");\n  // 表示するためのエラーメッセージオブジェクト。keyにあるだけの文が潜在的なエラー分の全て。\n  const [errors, setErrors] = useState({ title: \"\", description: \"\" });\n\n  const now = getFormatedDate(new Date());\n\n  const onSubmit = () => {\n    // バリデーションは種類ごとに関数で切り分けて、拡張性を重視してみる(1種類しかないけど)\n    const titleError = validateRequired(\n      issueTitle,\n      \"タイトルを入力してください\"\n    );\n    const descriptionError = validateRequired(\n      issueDescription,\n      \"説明を入力してください\"\n    );\n\n    // エラーがあった場合は早期リターンでdispatchさせない\n    if (titleError || descriptionError) {\n      setErrors({ title: titleError, description: descriptionError });\n      return;\n    }\n\n    const payload = {\n      title: issueTitle,\n      description: issueDescription,\n      status: \"Open\",\n      author: profile.userName,\n      createdAt: now,\n      updatedAt: now,\n    };\n    addIssue(payload);\n    hideModal(); // issueの追加処理が終わったらモーダルを閉じる\n  };\n\n  return (\n    <Wrapper>\n      <h2>Issueを追加</h2>\n      <InputSection>\n        <Field>\n          <FieldLabel>タイトル</FieldLabel>\n          <TextInput\n            placeholder=\"タイトルを入力してください\"\n            onChange={setIssueTitle}\n          />\n        </Field>\n        <Field>\n          <FieldLabel>説明</FieldLabel>\n          <TextArea\n            placeholder=\"説明を入力してください\"\n            onChange={setIssueDescription}\n          />\n        </Field>\n      </InputSection>\n      <MessageContainer>\n        {errors.title && <ErrorMessage message={errors.title}></ErrorMessage>}\n        {errors.description && (\n          <ErrorMessage message={errors.description}></ErrorMessage>\n        )}\n      </MessageContainer>\n      <Footer>\n        <Button styleType=\"primary\" label=\"作成\" onClick={onSubmit} />\n        <CloseButton onClick={hideModal}>閉じる</CloseButton>\n      </Footer>\n    </Wrapper>\n  );\n};\n\nNewIssue.propTypes = {\n  hideModal: PropTypes.func,\n  addIssue: PropTypes.func,\n  profile: PropTypes.object,\n};\n\nexport default NewIssue;\n","import React from \"react\";\nimport TextInput from \"../atoms/TextInput\";\nimport styled from \"styled-components\";\nimport Button from \"../atoms/Button\";\nimport PropTypes from \"prop-types\";\nimport NewIssue from \"../templates/NewIssue\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst SearchForm = styled.div`\n  padding: 0.5rem 1rem;\n  width: 100%;\n`;\n\nconst ActionButtons = styled.div`\n  display: flex;\n`;\n\nconst SearchBar = ({\n  profile,\n  addIssue,\n  deleteIssue,\n  searchWord,\n  onChange,\n  showModal,\n  hideModal,\n  checkedIssueIdList,\n  setIsCheckedAllCheckbox,\n}) => {\n  const onClickDelete = () => {\n    if (checkedIssueIdList.length) {\n      checkedIssueIdList.forEach((id) => {\n        deleteIssue(id);\n      });\n      // issueを削除した後は自動的に全件チェックボックスのチェックを外す\n      setIsCheckedAllCheckbox(false);\n    }\n  };\n  return (\n    <Wrapper>\n      <h2>Issue</h2>\n      <SearchForm>\n        <TextInput\n          placeholder=\"issue名で検索\"\n          value={searchWord}\n          onChange={onChange}\n        />\n      </SearchForm>\n      <ActionButtons>\n        <Button\n          onClick={() =>\n            showModal({\n              component: (\n                <NewIssue\n                  addIssue={addIssue}\n                  hideModal={hideModal}\n                  profile={profile}\n                />\n              ),\n            })\n          }\n          styleType=\"primary\"\n          label=\"New\"\n        />\n        <Button onClick={onClickDelete} styleType=\"danger\" label=\"Delete\" />\n      </ActionButtons>\n    </Wrapper>\n  );\n};\n\nSearchBar.propTypes = {\n  profile: PropTypes.object,\n  searchWord: PropTypes.string,\n  onChange: PropTypes.func,\n  showModal: PropTypes.func,\n  hideModal: PropTypes.func,\n  addIssue: PropTypes.func,\n  deleteIssue: PropTypes.func,\n  checkedIssueIdList: PropTypes.array,\n  setIsCheckedAllCheckbox: PropTypes.func,\n};\n\nexport default SearchBar;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Button from \"../atoms/Button\";\nimport TextInput from \"../atoms/TextInput\";\nimport TextArea from \"../atoms/TextArea\";\nimport ErrorMessage from \"../atoms/ErrorMessage\";\nimport { getFormatedDate, validateRequired } from \"../../utils\";\n\nconst Wrapper = styled.div`\n  max-width: 598px;\n  margin: auto;\n`;\n\nconst InputSection = styled.div`\n  padding: 2rem 0 1rem;\n`;\n\nconst MessageContainer = styled.section`\n  padding: 1rem;\n  min-height: 119px; /* エラー文が出てきてもボタンがしたに追いやられないよう、事前にスペースを開けておく。*/\n`;\n\nconst FieldLabel = styled.label`\n  display: block;\n  padding: 0.5rem 0;\n`;\n\nconst Field = styled.div`\n  padding: 1rem;\n`;\n\nconst CloseButton = styled.a`\n  cursor: pointer;\n  padding: 0.5rem 1rem;\n  font-size: 1rem;\n  margin: 4px;\n  min-width: 100px;\n  text-align: center;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 0.5rem;\n  button {\n    width: auto;\n  }\n`;\n\nconst EditIssue = ({ issue, hideModal, editIssue }) => {\n  const [issueState, setIssueState] = useState(issue.status);\n  const [issueTitle, setIssueTitle] = useState(issue.title);\n  const [issueDescription, setIssueDescription] = useState(issue.description);\n  const [errors, setErrors] = useState({ title: \"\", description: \"\" });\n\n  const now = getFormatedDate(new Date());\n\n  const onChangeStatus = (e) => {\n    setIssueState(e.target.value);\n  };\n\n  const onSubmit = () => {\n    const titleError = validateRequired(\n      issueTitle,\n      \"タイトルを入力してください\"\n    );\n    const descriptionError = validateRequired(\n      issueDescription,\n      \"説明を入力してください\"\n    );\n\n    if (titleError || descriptionError) {\n      setErrors({ title: titleError, description: descriptionError });\n      return;\n    }\n\n    const payload = {\n      ...issue,\n      title: issueTitle,\n      status: issueState,\n      description: issueDescription,\n      updatedAt: now,\n    };\n    editIssue(payload);\n    hideModal();\n  };\n\n  return (\n    <Wrapper>\n      <h2>Issueを編集</h2>\n      <InputSection>\n        <Field>\n          <FieldLabel>タイトル</FieldLabel>\n          <TextInput\n            placeholder=\"タイトルを入力してください\"\n            value={issueTitle}\n            onChange={setIssueTitle}\n          />\n        </Field>\n        <Field>\n          <FieldLabel>説明</FieldLabel>\n          <TextArea\n            placeholder=\"説明を入力してください\"\n            value={issueDescription}\n            onChange={setIssueDescription}\n          />\n        </Field>\n        <Field>\n          <select value={issueState} onChange={onChangeStatus}>\n            <option value=\"Open\">Open</option>\n            <option value=\"Close\">Close</option>\n          </select>\n        </Field>\n      </InputSection>\n      <MessageContainer>\n        {errors.title && <ErrorMessage message={errors.title}></ErrorMessage>}\n        {errors.description && (\n          <ErrorMessage message={errors.description}></ErrorMessage>\n        )}\n      </MessageContainer>\n      <Footer>\n        <Button styleType=\"primary\" label=\"更新\" onClick={onSubmit} />\n        <CloseButton onClick={hideModal}>閉じる</CloseButton>\n      </Footer>\n    </Wrapper>\n  );\n};\n\nEditIssue.propTypes = {\n  issue: PropTypes.object,\n  hideModal: PropTypes.func,\n  editIssue: PropTypes.func,\n};\n\nexport default EditIssue;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../variables\";\nimport PropTypes from \"prop-types\";\nimport EditIssue from \"../templates/EditIssue\";\n\nconst Wrapper = styled.div`\n  overflow: scroll;\n`;\n\nconst IssueTable = styled.table`\n  border: 1px solid ${colors.border};\n  border-radius: 6px;\n  width: 100%;\n`;\n\nconst TableRow = styled.tr`\n  cursor: pointer;\n  &:hover {\n    background: rgba(198, 218, 230, 0.25);\n  }\n\n  /* 最後の行のtdにかかっているborder-bottomを削除しないと、table自体のborderとの間に変な隙間があるように見える */\n  &:last-child > td {\n    border-bottom: none;\n  }\n\n  th,\n  td {\n    padding: 0.5rem;\n    text-align: left;\n    min-width: 10rem;\n    border-bottom: 1px solid ${colors.border};\n  }\n  th:first-child,\n  td:first-child {\n    min-width: auto;\n  }\n`;\n\nconst IssueContents = ({\n  issueData,\n  showModal,\n  hideModal,\n  editIssue,\n  checkedIssueIdList,\n  setCheckedIssueIdList,\n  isCheckedAllCheckbox,\n  setIsCheckedAllCheckbox,\n}) => {\n  const allIdList = issueData.map((item) => item.id);\n\n  const onClickAllCheckbox = () => {\n    setIsCheckedAllCheckbox((prevState) => {\n      const newState = !prevState;\n      // 変更したstate(全件checkboxのstate)を参考に別の処理を行う必要があったため、useStateのsetterにcallbackを渡し,\n      // その中で処理を行うことで変更されたstateを使って同期的に処理を実行可能\n      newState ? setCheckedIssueIdList(allIdList) : setCheckedIssueIdList([]);\n      return newState;\n    });\n  };\n\n  const onClickCheckbox = (e, id) => {\n    e.stopPropagation();\n    if (checkedIssueIdList.includes(id)) {\n      // checkされていた場合\n      setCheckedIssueIdList(checkedIssueIdList.filter((item) => item != id));\n    } else {\n      // checkされていなかった場合\n      setCheckedIssueIdList([...checkedIssueIdList, id]);\n    }\n  };\n  return (\n    <Wrapper>\n      <IssueTable>\n        <thead>\n          <TableRow>\n            <th>\n              <input\n                type=\"checkbox\"\n                checked={isCheckedAllCheckbox}\n                onClick={onClickAllCheckbox}\n                readOnly\n              />\n            </th>\n            <th></th>\n            <th>ステータス</th>\n            <th>作成者</th>\n            <th>作成日付</th>\n            <th>更新日付</th>\n          </TableRow>\n        </thead>\n        <tbody>\n          {issueData.length ? (\n            issueData.map((row) => {\n              return (\n                <TableRow\n                  key={row.id}\n                  onClick={() =>\n                    showModal({\n                      component: (\n                        <EditIssue\n                          issue={row}\n                          hideModal={hideModal}\n                          editIssue={editIssue}\n                        />\n                      ),\n                    })\n                  }\n                >\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      onClick={(e) => onClickCheckbox(e, row.id)}\n                      checked={checkedIssueIdList.includes(row.id)}\n                      readOnly\n                    />\n                  </td>\n                  <td>{row.title}</td>\n                  <td>{row.status}</td>\n                  <td>{row.author}</td>\n                  <td>{row.createdAt}</td>\n                  <td>{row.updatedAt}</td>\n                </TableRow>\n              );\n            })\n          ) : (\n            <TableRow>\n              <td>データがありません</td>\n            </TableRow>\n          )}\n        </tbody>\n      </IssueTable>\n    </Wrapper>\n  );\n};\n\nIssueContents.propTypes = {\n  issueData: PropTypes.array,\n  showModal: PropTypes.func,\n  hideModal: PropTypes.func,\n  editIssue: PropTypes.func,\n  checkedIssueIdList: PropTypes.array,\n  setCheckedIssueIdList: PropTypes.func,\n  isCheckedAllCheckbox: PropTypes.bool,\n  setIsCheckedAllCheckbox: PropTypes.func,\n};\n\nexport default IssueContents;\n","import React, { useState } from \"react\";\nimport SearchBar from \"../organisms/SearchBar\";\nimport styled from \"styled-components\";\nimport IssueContents from \"../organisms/IssueContents\";\nimport PropTypes from \"prop-types\";\n\nconst Wrapper = styled.div`\n  margin-top: 1rem;\n  padding: 1rem;\n`;\n\nconst Issue = ({\n  issueData,\n  profile,\n  addIssue,\n  editIssue,\n  deleteIssue,\n  showModal,\n  hideModal,\n}) => {\n  // searchBarとIssueContentsのコンポーネントで扱うstateなので親であるIssueで管理してあげる\n  const [searchWord, setSearchWord] = useState(\"\");\n  // このcheckBoxの状態も、searchBarのdeleteボタンとIssueContentのcheckBoxの2つの子コンポーネントで使用するのでここで管理\n  const [checkedIssueIdList, setCheckedIssueIdList] = useState([]);\n  const [isCheckedAllCheckbox, setIsCheckedAllCheckbox] = useState(false);\n\n  const filterdIssueData = issueData.filter((item) => {\n    return item.title.includes(searchWord);\n  });\n\n  return (\n    <Wrapper>\n      <SearchBar\n        profile={profile}\n        showModal={showModal}\n        addIssue={addIssue}\n        deleteIssue={deleteIssue}\n        searchWord={searchWord}\n        onChange={setSearchWord}\n        hideModal={hideModal}\n        checkedIssueIdList={checkedIssueIdList}\n        setIsCheckedAllCheckbox={setIsCheckedAllCheckbox}\n      />\n      <IssueContents\n        issueData={filterdIssueData}\n        profile={profile}\n        showModal={showModal}\n        hideModal={hideModal}\n        editIssue={editIssue}\n        checkedIssueIdList={checkedIssueIdList}\n        setCheckedIssueIdList={setCheckedIssueIdList}\n        isCheckedAllCheckbox={isCheckedAllCheckbox}\n        setIsCheckedAllCheckbox={setIsCheckedAllCheckbox}\n      />\n    </Wrapper>\n  );\n};\n\nIssue.propTypes = {\n  issueData: PropTypes.array,\n  profile: PropTypes.object,\n  addIssue: PropTypes.func,\n  editIssue: PropTypes.func,\n  deleteIssue: PropTypes.func,\n  showModal: PropTypes.func,\n  hideModal: PropTypes.func,\n};\n\nexport default Issue;\n","import {\n  addIssue,\n  editIssue,\n  deleteIssue,\n  hideModal,\n  showModal,\n} from \"../actions\";\nimport { connect } from \"react-redux\";\nimport Issue from \"../components/templates/Issue\";\n\nconst mapStateToProps = (state) => {\n  // Contentsコンポーネント内で使用するstateを限定する役目\n  return {\n    // stateオブジェクトから指定できるのは、src/reducers/index.js でrootReducerにまとめたときのオブジェクトのkey名\n    // key名がコンポーネントで受け取るpropsの名前になる\n    issueData: state.issue.data,\n    profile: state.profile,\n  };\n};\n\n// Contentsコンポーネントからdispatchするときに、わざわざ `dispatch(actionCreator(追加したい要素))`しなくても、\n// この場合だと `addContents(追加したい要素)` でstoreにdispatchできるようになる\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addIssue: (payload) => {\n      dispatch(addIssue(payload));\n    },\n    editIssue: (payload) => {\n      dispatch(editIssue(payload));\n    },\n    deleteIssue: (payload) => {\n      dispatch(deleteIssue(payload));\n    },\n    showModal: (component) => {\n      dispatch(showModal(component));\n    },\n    hideModal: () => {\n      dispatch(hideModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Issue);\n","import React from \"react\";\nimport Issue from \"../containers/Issue\";\n\nconst IssuePage = () => {\n  return <Issue />;\n};\n\nexport default IssuePage;\n","import React from \"react\";\n\nconst PullRequest = () => {\n  return <h3>PullRequest</h3>;\n};\n\nexport default PullRequest;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../variables\";\nimport PropTypes from \"prop-types\";\n\nconst TabList = styled.ul`\n  display: flex;\n`;\n\nconst Tab = styled.li`\n  width: 100%;\n  text-align: center;\n  padding: 1rem;\n  cursor: pointer;\n  font-size: 1.2rem;\n  border-radius: 6px 6px 0 0;\n  border-top: ${({ isActive }) =>\n    isActive ? `1px solid ${colors.border}` : \"\"};\n  border-bottom: ${({ isActive }) =>\n    isActive ? \"\" : `1px solid ${colors.border}`};\n  border-left: ${({ isActive }) =>\n    isActive ? `1px solid ${colors.border}` : \"\"};\n  border-right: ${({ isActive }) =>\n    isActive ? `1px solid ${colors.border}` : \"\"};\n`;\n\nconst TabHeader = ({ selectedTab, tabs, onClick }) => {\n  return (\n    <TabList>\n      {tabs.map(({ key, label }) => {\n        const isActive = key === selectedTab;\n        return (\n          <Tab isActive={isActive} key={key} onClick={() => onClick(key)}>\n            {label}\n          </Tab>\n        );\n      })}\n    </TabList>\n  );\n};\n\nTabHeader.propTypes = {\n  selectedTab: PropTypes.string,\n  tabs: PropTypes.array,\n  onClick: PropTypes.func,\n};\n\nexport default TabHeader;\n","import React from \"react\";\n\nconst PullRequest = () => {\n  return <h3>Pull Request</h3>;\n};\n\nexport default PullRequest;\n","import React from \"react\";\nimport TabHeader from \"../organisms/TabHeader\";\nimport PropTypes from \"prop-types\";\nimport Issue from \"../../containers/Issue\";\nimport PullRequest from \"./PullRequest\";\n\n// 実際に表示するcomponentの配列\nconst tabContents = [\n  { key: \"issue\", component: <Issue /> },\n  { key: \"pullRequest\", component: <PullRequest /> },\n];\n\nconst IndexTemplate = ({ selectedTab, tabs, onClick }) => {\n  return (\n    <>\n      <TabHeader tabs={tabs} selectedTab={selectedTab} onClick={onClick} />\n      {tabContents.map((tabContent) => {\n        return tabContent.key === selectedTab ? tabContent.component : <></>;\n      })}\n    </>\n  );\n};\n\nIndexTemplate.propTypes = {\n  selectedTab: PropTypes.string,\n  tabs: PropTypes.array,\n  onClick: PropTypes.func,\n};\n\nexport default IndexTemplate;\n","import React, { useState } from \"react\";\nimport IndexTemplate from \"../components/templates/IndexTemplate\";\n\nconst Index = () => {\n  // タブのタイトルを表示するための配列\n  const tabs = [\n    { key: \"issue\", label: \"Issue\" },\n    { key: \"pullRequest\", label: \"Pull Request\" },\n  ];\n\n  // 選択されたタブはlocal stateとして扱う\n  const [selectedTab, changeTab] = useState(\"issue\");\n\n  return (\n    <IndexTemplate tabs={tabs} selectedTab={selectedTab} onClick={changeTab} />\n  );\n};\n\nexport default Index;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { colors } from \"../variables\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileContainer = styled.div`\n  display: flex;\n  margin: 2rem 0;\n  border-radius: 6px;\n  border: 1px solid ${colors.border};\n`;\n\nconst ProfilePicture = styled.div`\n  padding: 1rem;\n  width: 50%;\n`;\n\nconst ProfileInformation = styled.div`\n  padding: 1rem;\n  width: 50%;\n`;\n\nconst Label = styled.label`\n  color: ${colors.weak};\n`;\n\nconst ProfileItem = styled.p`\n  padding: 1rem 0;\n  font-size: 1.2rem;\n`;\n\nconst ProfileWrapper = styled.div`\n  padding: 1rem;\n`;\n\nconst Profile = ({ user }) => {\n  return (\n    <ProfileWrapper>\n      <h1>Profile</h1>\n      <ProfileContainer>\n        <ProfilePicture>\n          <Label>プロフィール</Label>\n          <ProfileItem>\n            <img src={user.profileUrl} alt=\"profile\" />\n          </ProfileItem>\n        </ProfilePicture>\n        <ProfileInformation>\n          <div>\n            <Label>ユーザー名</Label>\n            <ProfileItem>{user.userName}</ProfileItem>\n          </div>\n          <div>\n            <Label>メールアドレス</Label>\n            <ProfileItem>{user.email}</ProfileItem>\n          </div>\n        </ProfileInformation>\n      </ProfileContainer>\n    </ProfileWrapper>\n  );\n};\n\nProfile.propTypes = {\n  user: PropTypes.object,\n};\n\nexport default Profile;\n","// import rootReducer from \"../reducers\";\nimport { connect } from \"react-redux\";\n// import * as actions from \"../actions\";\nimport Profile from \"../pages/Profile\";\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.profile,\n  };\n};\n\nconst mapDispatchToProps = () => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport PropTypes from \"prop-types\";\n\nModal.setAppElement(\"#root\"); // アクセシビリティのために宣言\n\nconst ModalWrapper = ({ isOpen, component, hideModal }) => {\n  return (\n    <>\n      {/* onRequestCloseに渡した関数は、モーダルの外側をクリックしたときに実行される */}\n      {isOpen && (\n        <Modal onRequestClose={hideModal} isOpen={isOpen}>\n          {component}\n        </Modal>\n      )}\n    </>\n  );\n};\n\nModalWrapper.propTypes = {\n  isOpen: PropTypes.bool,\n  component: PropTypes.object,\n  hideModal: PropTypes.func,\n};\n\nexport default ModalWrapper;\n","import { connect } from \"react-redux\";\nimport ModalWrapper from \"../components/organisms/ModalWrapper\";\nimport { hideModal } from \"../actions\";\n\nconst mapStateToProps = (state) => {\n  return {\n    isOpen: state.modal.isOpen,\n    component: state.modal.component,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    hideModal: () => {\n      dispatch(hideModal());\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalWrapper);\n","import React from \"react\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport Header from \"./components/organisms/Header\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport IssuePage from \"./pages/Issue\";\nimport PullRequest from \"./pages/PullRequest\";\nimport Index from \"./pages/Index.js\";\nimport styled from \"styled-components\";\nimport Profile from \"./containers/Profile\";\nimport ModalWrapper from \"./containers/Modal\";\n\nconst ContentWrapper = styled.div`\n  padding: 2rem 1rem;\n  margin: 0 auto;\n  max-width: 896px;\n`;\n\nfunction App() {\n  return (\n    <Router basename=\"/redux-github-viewer\">\n      <div>\n        <ModalWrapper />\n        <GlobalStyle />\n        <Header />\n        <ContentWrapper>\n          <Switch>\n            <Route path=\"/issue\" component={IssuePage} />\n            <Route path=\"/pull-request\" component={PullRequest} />\n            <Route path=\"/profile\" component={Profile} />\n            <Route exact path=\"/\" component={Index} />\n            {/* pathの検索方法が前方置換なのでexactを宣言して完全一致にしてあげる */}\n          </Switch>\n        </ContentWrapper>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_ISSUE, EDIT_ISSUE, DELETE_ISSUE } from \"../actions\";\n\nconst mockData = [\n  {\n    id: 1,\n    title: \"A bug in Top Page\",\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    status: \"Open\",\n    author: \"yuki\",\n    createdAt: \"01-01-2021\",\n    updatedAt: \"01-01-2021\",\n  },\n  {\n    id: 2,\n    title: \"A problem of performance in Top Page\",\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    status: \"Open\",\n    author: \"yuki\",\n    createdAt: \"01-01-2021\",\n    updatedAt: \"01-01-2021\",\n  },\n  {\n    id: 3,\n    title: \"fix layout\",\n    description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\",\n    status: \"Open\",\n    author: \"yuki\",\n    createdAt: \"01-01-2021\",\n    updatedAt: \"01-01-2021\",\n  },\n];\n\nconst initialState = {\n  index: mockData.length, // dataの長さ ≒ dataのidの値\n  data: mockData, // data自体\n};\n\nconst issueReducer = (state = initialState, action) => {\n  const { index, data } = state; // 現在のdataのindex(要素の数)とdata(要素データ自体)を代入。\n\n  // newIndex: 新しいstateのindexキーの中身\n  // newData: 新しいstateのdataキーの中身\n  const newIndex = index + 1; // indexに1を加算して'ISSUEADD'で追加する要素のためのindexを用意する。\n  const newData = [...data]; // 新しいデータのための「枠」を作成(今までのデータを引き継ぐ)\n\n  switch (action.type) {\n    case ADD_ISSUE:\n      // 配列の要素はindex数より1少ないので周りくどいけど -1 しておく(indexに指定してもいいけどニュアンスが一致しないからやめておく)\n      newData[newData.length] = { ...action.payload, id: newIndex }; // payloadにはidは設定されていない想定なのでここでidを指定してあげる。\n      return { index: newIndex, data: newData };\n    case EDIT_ISSUE:\n      // 配列でissueのデータを持っているので、\n      newData[\n        newData.findIndex((item) => {\n          return item.id == action.payload.id;\n        })\n      ] = { ...action.payload };\n      return { ...state, data: [...newData] };\n    case DELETE_ISSUE:\n      return {\n        ...state,\n        data: newData.filter((item) => item.id !== action.payload.id),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default issueReducer;\n","const initialState = {\n  profileUrl:\n    \"https://avatars1.githubusercontent.com/u/25723193?s=60&u=5f2d871352830fdf1a79ee285e0712044105ca91&v=4\",\n  userName: \"yukiyohure\",\n  email: \"example@mock.com\",\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default profileReducer;\n","import { HIDE_MODAL, SHOW_MODAL } from \"../../actions\";\n\nconst initialState = {\n  isOpen: false,\n  component: {},\n};\n\nconst modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SHOW_MODAL:\n      return {\n        ...state,\n        isOpen: true,\n        component: action.payload,\n      };\n    case HIDE_MODAL:\n      return {\n        ...state,\n        isOpen: false,\n        component: {},\n      };\n    default:\n      return state;\n  }\n};\n\nexport default modalReducer;\n","import issueReducer from \"./issue\";\nimport profileReducer from \"./profile\";\nimport modalReducer from \"./ui/modal\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducers = combineReducers({\n  issue: issueReducer,\n  profile: profileReducer,\n  modal: modalReducer,\n});\n\nexport default rootReducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom'; // ルーティングに必要なRouterコンポーネントをimport\nimport { createStore } from 'redux';\nimport rootReducers from './reducers';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(\n  rootReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() // devツール表示のための記述。\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/*\n      Routerは子要素に一つのコンポーネントしか受け付けないので、\n      基本的に一番親のコンポーネントを囲むように設置。\n      */}\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}